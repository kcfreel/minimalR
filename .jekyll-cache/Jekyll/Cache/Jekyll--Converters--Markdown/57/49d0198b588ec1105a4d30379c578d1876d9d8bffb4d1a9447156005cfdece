I"Bs<h2 id="topics">Topics</h2>
<ul>
  <li>Complex string manipulations</li>
  <li>Regular expressions</li>
  <li>Representing taxonomic data</li>
  <li>Customizing axes</li>
  <li>Developing multistep workflow to answer a problem</li>
</ul>

<h2 id="motivation">Motivation</h2>
<p>To this point our analysis has looked at alpha and beta diversity values for our samples. We’d like to start drilling into the data to get a better sense of the types of organisms that might differ between the three diagnosis groups. What we’d like to do is to generate plots to describe the biodiversity of the three diagnosis groups. In the next session we’ll work with OTU data describing biodiversity at the phylum and OTU level. We’ll need to manipulate the data in three steps. First, in the <code class="language-plaintext highlighter-rouge">raw_data</code> folder there is a file called <code class="language-plaintext highlighter-rouge">baxter.cons.taxonomy</code> that contains the taxonomic information for each OTU that was observed when defining OTUs at a 3% distance cutoff. To build our plots we need to find the different phyla in that file. Second, we need to aggregate the data in the <code class="language-plaintext highlighter-rouge">baxter.subsample.shared</code> file by those phyla. Third, we will probably need to aggregate the data for each subject across individuals within a diagnosis group. Ready? Let’s go!</p>

<h2 id="processing-taxonomy-data">Processing taxonomy data</h2>
<p>We’ll start by reading in the data contained within <code class="language-plaintext highlighter-rouge">baxter.cons.taxonomy</code> to a data frame we’ll call <code class="language-plaintext highlighter-rouge">taxonomy</code>. The column headings are all capitalized, so we’ll want to make them lower cased to avoid confusion down the road…</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">taxonomy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.cons.taxonomy"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">rename_all</span><span class="p">(</span><span class="n">tolower</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>If you take a peak at this data frame you’ll notice a few things. The first column is the OTU label and it has the format of “Otu######” where “#” is a number. You’ll also notice that the third column, <code class="language-plaintext highlighter-rouge">taxonomy</code>, contains the taxonomic information that we’re interested in. The values of this column have a format like <code class="language-plaintext highlighter-rouge">Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Blautia(100);</code>. This is a <code class="language-plaintext highlighter-rouge">mothur</code> convention that indicates the taxonomic name at each level with each level separated by a semicolon (i.e. ‘;’). Each taxonomic name also has a name (e.g. “Firmicutes”) followed by a pair of parentheses with a number inside of them (e.g. “(100)”). We would like to write a function to parse these strings to return a data frame where the values are the OTU names and the names for each taxonomic level so that we can aggregate our OTU data by taxonomic level. From the previous session you may recall that we used the <code class="language-plaintext highlighter-rouge">str_replace_all</code> function to find a pattern in a vector of characters and replace with a new string. We saw how we could remove <code class="language-plaintext highlighter-rouge">0.03-</code> with a function call like this:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="s2">"0.03-2003650"</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"0.03-"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "2003650"
</code></pre></div></div>

<p>This was a relatively simple pattern. Looking at the values in the “taxonomy” column of the <code class="language-plaintext highlighter-rouge">taxonomy</code> data frame there are a number of different values that are quite similar with a similar format. We’d like to find a pattern that matches the parentheses and numbers in between and replaces them with an empty string. This helps us get into some more advanced patterns. Fortunately, R has several “metacharacters” that you can think of as being generic representations of numbers, alphanumeric characters, and white spaces. You can learn more about these and many others by looking at the material in <code class="language-plaintext highlighter-rouge">?regex</code> or on the handy <a href="https://www.rstudio.com/wp-content/uploads/2016/09/RegExCheatsheet.pdf">RStudio cheat sheet</a>. Let’s look at some examples before we apply these tools to our problem. Can you tell what each of these three metacharacters does?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"My phone number is (555)555-1234"</span><span class="w">
</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'\\s'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"_"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My_phone_number_is_(555)555-1234"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'\\s'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"_"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w"> </span><span class="c1">#str_replace does what str_replace_all does once</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My_phone number is (555)555-1234"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'\\d'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"#"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My phone number is (###)###-####"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'\\w'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "** ***** ****** ** (***)***-****"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'.'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"x"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'[-]'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">" "</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My phone number is (555)555 1234"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'[()-]'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">" "</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My phone number is  555 555 1234"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'[^()-]'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">" "</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "                   (   )   -    "
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'\\d'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"#"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My phone number is (###)###-####"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'m'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"*"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">,</span><span class="w"> </span><span class="n">ignore.case</span><span class="o">=</span><span class="nb">T</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## Error in str_replace_all(pattern = "m", replacement = "*", string, ignore.case = T): unused argument (ignore.case = T)
</code></pre></div></div>

<p>Got it? We can string these together to produce a pattern to represent a phone number:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'[(]\\d\\d\\d[)]\\d\\d\\d-\\d\\d\\d\\d'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"&lt;redacted&gt;"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My phone number is &lt;redacted&gt;"
</code></pre></div></div>

<p>Do you see what’s happening there? If we want to match parentheses, we used <code class="language-plaintext highlighter-rouge">[(]</code> and <code class="language-plaintext highlighter-rouge">[)]</code>. Alternatively, we could have used <code class="language-plaintext highlighter-rouge">\\(</code> and <code class="language-plaintext highlighter-rouge">\\)</code>. The <code class="language-plaintext highlighter-rouge">\\</code> is necessary because the naked parentheses will be useful in a moment. For now let’s stick with the bracket notation. We match the parentheses and the three numbers (i.e. <code class="language-plaintext highlighter-rouge">\\d\\d\\d</code>) within them. Then we match another three numbers, a hyphen and then four more numbers. If our phone number has a different pattern - say we don’t use parentheses around the area code, <code class="language-plaintext highlighter-rouge">str_replace_all</code> won’t work like we want. Instead of repeating <code class="language-plaintext highlighter-rouge">\\d</code> over and over, we can use a quantifier to match the numbers.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'[(]\\d{3}[)]\\d{3}-\\d{4}'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"&lt;redacted&gt;"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My phone number is &lt;redacted&gt;"
</code></pre></div></div>

<p>This is the same pattern as we had before, but much simpler. It’s worth noting that we could have used <code class="language-plaintext highlighter-rouge">\\d{5,}</code> to match five or more consecutive numbers, <code class="language-plaintext highlighter-rouge">\\d{,5}</code> to match five or fewer consecutive numbers or <code class="language-plaintext highlighter-rouge">\\d{1,5}</code> to match one to five consecutive numbers. Let’s consider a new set of strings. Incidentally, we’ve seen this before, but <code class="language-plaintext highlighter-rouge">c(something, something_else)</code> creates what is called a “vector”. Think of it as being like a column from our data frames:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"My phone number is (555)555-1234"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Suzy's phone number is 555-555-9876"</span><span class="p">)</span><span class="w">
</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'[(]\\d{3}[)]\\d{3}-\\d{4}'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"&lt;redacted&gt;"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My phone number is &lt;redacted&gt;"       "Suzy's phone number is 555-555-9876"
</code></pre></div></div>

<p>You should see that Suzy’s phone number was not redacted. We would like to manipulate our regular expression to accommodate both phone numbers. We can do this using another type of quantifier - the <code class="language-plaintext highlighter-rouge">?</code>, which represents 0 or 1 instances of the character:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"My phone number is (555)555-1234"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Suzy's phone number is 555-555-9876"</span><span class="p">)</span><span class="w">
</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'[(]?\\d{3}[)-]?\\d{3}-\\d{4}'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"&lt;redacted&gt;"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My phone number is &lt;redacted&gt;"     "Suzy's phone number is &lt;redacted&gt;"
</code></pre></div></div>

<p>See that? By putting a <code class="language-plaintext highlighter-rouge">?</code> after the <code class="language-plaintext highlighter-rouge">[()]</code> we ask <code class="language-plaintext highlighter-rouge">str_replace_all</code> to match a patten that may or may not start with an opening parentheses. Similarly, after three numbers, we ask <code class="language-plaintext highlighter-rouge">str_replace_all</code> to match a string that may or may not contain a <code class="language-plaintext highlighter-rouge">)</code> or a <code class="language-plaintext highlighter-rouge">-</code>. Another quantifier we might want to use is <code class="language-plaintext highlighter-rouge">*</code>. This matches zero or more instances of the preceding character.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"My phone number is (555)555-1234"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Suzy's phone number is 555-555-9876"</span><span class="p">)</span><span class="w">
</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'.* '</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "(555)555-1234" "555-555-9876"
</code></pre></div></div>

<p>The last tool that we can use is to replace an entire string with a substring. To do this we will use naked parentheses to wrap the substring that we want to preserve. In the replacement string we will use “\1” to insert the substring. Let’s suppose we want to extract the area code from each phone number. Can you see what these lines of code are doing?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"My phone number is (555)555-1234"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Suzy's phone number is 555-555-9876"</span><span class="p">)</span><span class="w">
</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'[(]?(\\d{3})[)-]?\\d{3}-\\d{4}'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"\\1"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "My phone number is 555"     "Suzy's phone number is 555"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'.*[(]?(\\d{3})[)-]?\\d{3}-\\d{4}'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"\\1"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "555" "555"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'.*[(]?(\\d{3})[)-]?\\d{3}-\\d{4}'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"Area code: \\1"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "Area code: 555" "Area code: 555"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">pattern</span><span class="o">=</span><span class="s1">'.*[(]?(\\d{3})[)-]?(\\d{3})-(\\d{4})'</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"Area code: \\1, Central office code: \\2, Private extension: \\3"</span><span class="p">,</span><span class="w"> </span><span class="n">string</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "Area code: 555, Central office code: 555, Private extension: 1234"
## [2] "Area code: 555, Central office code: 555, Private extension: 9876"
</code></pre></div></div>

<hr />

<h3 id="activity-1">Activity 1</h3>

<p>Here is a data frame of strings</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="p">(</span><span class="w">
	</span><span class="n">s</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="w">
	</span><span class="s2">"Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Blautia(95);"</span><span class="p">,</span><span class="w">
	</span><span class="s2">"Bacteria(100);Firmicutes(100);Bacilli(100);Lactobacillales(100);Streptococcaceae(85);unclassified(100);"</span><span class="p">,</span><span class="w">
	</span><span class="s2">"Bacteria(100);unclassified(100);unclassified(100);unclassified(100);unclassified(100);unclassified(100);"</span><span class="w">
	</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>Write the <code class="language-plaintext highlighter-rouge">str_replace_all</code> pattern and replacement that takes in <code class="language-plaintext highlighter-rouge">string_df</code> and returns</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># A tibble: 3 x 1
  s               
  &lt;chr&gt;           
1 Blautia         
2 Streptococcaceae
3 Bacteria        
</code></pre></div></div>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">
  <p>There are many many ways to do this…</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">string_df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">s</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="s2">"[\\(\\d\\)]"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">s</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="s2">"unclassified;"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">s</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="s2">"(.*);"</span><span class="p">,</span><span class="w"> </span><span class="s2">"\\1"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">s</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">s</span><span class="p">,</span><span class="w"> </span><span class="s2">".*;(.*)"</span><span class="p">,</span><span class="w"> </span><span class="s2">"\\1"</span><span class="p">))</span><span class="w">
</span></code></pre></div>  </div>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 3 x 1
##   s               
##   &lt;chr&gt;           
## 1 Blautia         
## 2 Streptococcaceae
## 3 Bacteria
</code></pre></div>  </div>
</div>

<hr />

<p>As we were reminded in the last Activity, the taxonomy strings in <code class="language-plaintext highlighter-rouge">taxonomy</code> have this general format:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Lachnospiraceae(100);Blautia(100);
</code></pre></div></div>

<p>Our goal is to strip out the confidence scores and create a separate column in our data frame for each taxonomic level, which is separated by a <code class="language-plaintext highlighter-rouge">;</code>.  Let’s start by removing the parentheses and the numbers between them. From the output of <code class="language-plaintext highlighter-rouge">taxonomy</code> it appears that all of the confidence scores are <code class="language-plaintext highlighter-rouge">100</code>. This could be pretty easy.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">taxonomy</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\(100\\)"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 9,467 x 3
##    otu         size taxonomy                                                    
##    &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;                                                       
##  1 Otu000001 1.30e6 Bacteria;Firmicutes;Clostridia;Clostridiales;Lachnospiracea…
##  2 Otu000002 9.98e5 Bacteria;Bacteroidetes;Bacteroidia;Bacteroidales;Bacteroida…
##  3 Otu000003 8.27e5 Bacteria;Bacteroidetes;Bacteroidia;Bacteroidales;Bacteroida…
##  4 Otu000004 7.61e5 Bacteria;Verrucomicrobia;Verrucomicrobiae;Verrucomicrobiale…
##  5 Otu000005 7.40e5 Bacteria;Firmicutes;Clostridia;Clostridiales;Lachnospiracea…
##  6 Otu000006 6.94e5 Bacteria;Firmicutes;Clostridia;Clostridiales;Ruminococcacea…
##  7 Otu000007 6.82e5 Bacteria;Bacteroidetes;Bacteroidia;Bacteroidales;Bacteroida…
##  8 Otu000008 5.57e5 Bacteria;Firmicutes;Clostridia;Clostridiales;Lachnospiracea…
##  9 Otu000009 5.51e5 Bacteria;Firmicutes;Clostridia;Clostridiales;Lachnospiracea…
## 10 Otu000010 4.94e5 Bacteria;Firmicutes;Clostridia;Clostridiales;unclassified;u…
## # … with 9,457 more rows
</code></pre></div></div>

<p>The output is too big too look out both in terms of the number of rows and the width of our taxonomy column. Let’s use another string matching tool to see whether any rows still have parentheses in them. This time we can use either the <code class="language-plaintext highlighter-rouge">grepl</code> or <code class="language-plaintext highlighter-rouge">str_detect</code> functions. These functions will return a <code class="language-plaintext highlighter-rouge">TRUE</code> or <code class="language-plaintext highlighter-rouge">FALSE</code> if our pattern matches the string. This makes them great for use with the <code class="language-plaintext highlighter-rouge">filter</code> function in a <code class="language-plaintext highlighter-rouge">dplyr</code> workflow. We’ll also use the <code class="language-plaintext highlighter-rouge">select</code> function so we can see more of the “taxonomy” column.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">taxonomy</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\(100\\)"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">str_detect</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\("</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 338 x 1
##    taxonomy                                                                     
##    &lt;chr&gt;                                                                        
##  1 Bacteria;Firmicutes;Clostridia;Clostridiales;Lachnospiraceae;Roseburia(97);  
##  2 Bacteria;Firmicutes;Clostridia;Clostridiales;Lachnospiraceae;Blautia(97);    
##  3 Bacteria;Firmicutes;Clostridia;Clostridiales;Ruminococcaceae;Ruminococcus(69…
##  4 Bacteria;Firmicutes;Clostridia;Clostridiales;Lachnospiraceae;Ruminococcus2(5…
##  5 Bacteria;Firmicutes;Clostridia;Clostridiales;Ruminococcaceae;unclassified(99…
##  6 Bacteria;Firmicutes;Clostridia;Clostridiales;Peptostreptococcaceae;Clostridi…
##  7 Bacteria;Firmicutes;Clostridia;Clostridiales;Ruminococcaceae;unclassified(91…
##  8 Bacteria;Firmicutes;Clostridia;Clostridiales;Lachnospiraceae;Blautia(88);    
##  9 Bacteria;Firmicutes;Erysipelotrichia;Erysipelotrichales;Erysipelotrichaceae;…
## 10 Bacteria;Firmicutes;Clostridia;Clostridiales;Lachnospiraceae;Ruminococcus2(9…
## # … with 328 more rows
</code></pre></div></div>

<p>It looks like we didn’t remove all of the confidence scores - ruh roh! How can we change the pattern in our <code class="language-plaintext highlighter-rouge">mutate</code> function? We could use the <code class="language-plaintext highlighter-rouge">\\d</code> metacharacter with the <code class="language-plaintext highlighter-rouge">*</code> quantifier to remove any number between parentheses.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">taxonomy</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\(\\d*\\)"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">str_detect</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\("</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 0 x 1
## # … with 1 variable: taxonomy &lt;chr&gt;
</code></pre></div></div>

<p>Nice - there’s nothing there, which means that our filter command returned nothing. Now we’d like to split the “taxonomy” column into separate columns for each taxonomic level. We can do this easily with the <code class="language-plaintext highlighter-rouge">separate</code> function. For this function to work, we need to give it a delimiter to separate the strings by (i.e. <code class="language-plaintext highlighter-rouge">sep=";"</code>) and values to place on the new columns (i.e. <code class="language-plaintext highlighter-rouge">into=c("kingdom", "phylum", ..., "genus")</code>). If it’s going to separate data by the <code class="language-plaintext highlighter-rouge">;</code>, then we will end up with a seventh column that doesn’t contain any information in it because the final character in our taxonomy strings is a <code class="language-plaintext highlighter-rouge">;</code>. We need an additional <code class="language-plaintext highlighter-rouge">mutate</code> line to remove that final semicolon before running <code class="language-plaintext highlighter-rouge">separate</code>. But how do we remove the last <code class="language-plaintext highlighter-rouge">;</code> and not all of them? Looking at the <a href="https://www.rstudio.com/wp-content/uploads/2016/09/RegExCheatsheet.pdf">cheat sheet</a>, can you figure out how we can tell <code class="language-plaintext highlighter-rouge">str_replace_all</code> to match the last semicolon in the strings?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">taxonomy</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\(\\d*\\)"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">";$"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">separate</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">into</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"kingdom"</span><span class="p">,</span><span class="w"> </span><span class="s2">"phylum"</span><span class="p">,</span><span class="w"> </span><span class="s2">"class"</span><span class="p">,</span><span class="w"> </span><span class="s2">"order"</span><span class="p">,</span><span class="w"> </span><span class="s2">"family"</span><span class="p">,</span><span class="w"> </span><span class="s2">"genus"</span><span class="p">),</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s2">";"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 9,467 x 8
##    otu        size kingdom  phylum    class     order      family      genus    
##    &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;    
##  1 Otu000… 1301902 Bacteria Firmicut… Clostrid… Clostridi… Lachnospir… Blautia  
##  2 Otu000…  998089 Bacteria Bacteroi… Bacteroi… Bacteroid… Bacteroida… Bacteroi…
##  3 Otu000…  826705 Bacteria Bacteroi… Bacteroi… Bacteroid… Bacteroida… Bacteroi…
##  4 Otu000…  761110 Bacteria Verrucom… Verrucom… Verrucomi… Verrucomic… Akkerman…
##  5 Otu000…  740489 Bacteria Firmicut… Clostrid… Clostridi… Lachnospir… Roseburia
##  6 Otu000…  694460 Bacteria Firmicut… Clostrid… Clostridi… Ruminococc… Faecalib…
##  7 Otu000…  682137 Bacteria Bacteroi… Bacteroi… Bacteroid… Bacteroida… Bacteroi…
##  8 Otu000…  556768 Bacteria Firmicut… Clostrid… Clostridi… Lachnospir… Anaerost…
##  9 Otu000…  551496 Bacteria Firmicut… Clostrid… Clostridi… Lachnospir… Blautia  
## 10 Otu000…  493735 Bacteria Firmicut… Clostrid… Clostridi… unclassifi… unclassi…
## # … with 9,457 more rows
</code></pre></div></div>

<p>That’s exactly what we want, so let’s go ahead and save this over our taxonomy data frame</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">taxonomy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.cons.taxonomy"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">rename_all</span><span class="p">(</span><span class="n">tolower</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\(\\d*\\)"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">";$"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">separate</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">into</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"kingdom"</span><span class="p">,</span><span class="w"> </span><span class="s2">"phylum"</span><span class="p">,</span><span class="w"> </span><span class="s2">"class"</span><span class="p">,</span><span class="w"> </span><span class="s2">"order"</span><span class="p">,</span><span class="w"> </span><span class="s2">"family"</span><span class="p">,</span><span class="w"> </span><span class="s2">"genus"</span><span class="p">),</span><span class="w"> </span><span class="n">sep</span><span class="o">=</span><span class="s2">";"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<hr />

<h3 id="activity-2">Activity 2</h3>
<p>Looking at the values in <code class="language-plaintext highlighter-rouge">taxonomy</code> we see a number of columns have “unclassified” as the value. Instead of parsing the taxonomy string to return all taxonomic names, can you find a way to generate a column that contains the deepest taxonomy that isn’t “unclassified”? For example, if this was the taxonomy:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Bacteria(100);Firmicutes(100);Clostridia(100);Clostridiales(100);Ruminococcaceae(100);unclassified(100);
</code></pre></div></div>

<p>The output should return “Ruminococcaceae”</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.cons.taxonomy"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">rename_all</span><span class="p">(</span><span class="n">tolower</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\(\\d*\\)"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"unclassified;"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">";$"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">".*;"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w">
</span></code></pre></div>  </div>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 9,467 x 3
##    otu          size taxonomy        
##    &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;           
##  1 Otu000001 1301902 Blautia         
##  2 Otu000002  998089 Bacteroides     
##  3 Otu000003  826705 Bacteroides     
##  4 Otu000004  761110 Akkermansia     
##  5 Otu000005  740489 Roseburia       
##  6 Otu000006  694460 Faecalibacterium
##  7 Otu000007  682137 Bacteroides     
##  8 Otu000008  556768 Anaerostipes    
##  9 Otu000009  551496 Blautia         
## 10 Otu000010  493735 Clostridiales   
## # … with 9,457 more rows
</code></pre></div>  </div>
</div>

<hr />

<p>What I’d really like is a strip chart or box plot showing the relative abundance of each phylum in each subject segregated by diagnosis. We’ll need to get our OTU data, make it tidy, join it with <code class="language-plaintext highlighter-rouge">taxonomy</code>, and then run it through the rest of our <code class="language-plaintext highlighter-rouge">dplyr</code> and <code class="language-plaintext highlighter-rouge">ggplot</code> steps. The OTU data is in <code class="language-plaintext highlighter-rouge">raw_data/baxter.subsample.shared</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">otu_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="s2">"raw_data/baxter.subsample.shared"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Looking at <code class="language-plaintext highlighter-rouge">shared</code> we see that the data frame is not tidy in the same way that our rarefaction curve data frame was not initially tidy. We’d like to have a data frame that has the “Group” or “sample” identifier as a column, a column with the OTU identifier, and a column with the number of sequences that were found for that OTU and group. See if you can do these steps without looking ahead.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">otu_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="s2">"raw_data/baxter.subsample.shared"</span><span class="p">,</span><span class="w"> </span><span class="n">col_types</span><span class="o">=</span><span class="n">cols</span><span class="p">(</span><span class="n">Group</span><span class="o">=</span><span class="n">col_character</span><span class="p">()))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">label</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="n">numOtus</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">rename</span><span class="p">(</span><span class="n">sample</span><span class="o">=</span><span class="n">Group</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="o">=-</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">names_to</span><span class="o">=</span><span class="s2">"otu"</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="o">=</span><span class="s2">"count"</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>As we stated in our <code class="language-plaintext highlighter-rouge">pivot_longer</code> function syntax, these data are counts, not relative abundances. Let’s create a “rel_abund” column. First we need to know the number of sequences in each sample</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">otu_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">group_by</span><span class="p">(</span><span class="n">sample</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">summarize</span><span class="p">(</span><span class="n">n</span><span class="o">=</span><span class="nf">sum</span><span class="p">(</span><span class="n">count</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">summary</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##     sample                n        
##  Length:490         Min.   :10530  
##  Class :character   1st Qu.:10530  
##  Mode  :character   Median :10530  
##                     Mean   :10530  
##                     3rd Qu.:10530  
##                     Max.   :10530
</code></pre></div></div>

<p>We see that all of our samples have 10530 sequences in them. Now we can modify our previous code to get the relative abundance values</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">otu_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="s2">"raw_data/baxter.subsample.shared"</span><span class="p">,</span><span class="w"> </span><span class="n">col_types</span><span class="o">=</span><span class="n">cols</span><span class="p">(</span><span class="n">Group</span><span class="o">=</span><span class="n">col_character</span><span class="p">()))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">label</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="n">numOtus</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">rename</span><span class="p">(</span><span class="n">sample</span><span class="o">=</span><span class="n">Group</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="o">=-</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">names_to</span><span class="o">=</span><span class="s2">"otu"</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="o">=</span><span class="s2">"count"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">rel_abund</span><span class="o">=</span><span class="n">count</span><span class="o">/</span><span class="m">10530</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Now we can join our <code class="language-plaintext highlighter-rouge">otu_data</code>, <code class="language-plaintext highlighter-rouge">metadata</code>, and <code class="language-plaintext highlighter-rouge">taxonomy</code> data frames together. These files can get big quick, so let’s not generate a gigantic data frame all at once. We’ll first join our <code class="language-plaintext highlighter-rouge">otu_data</code> and <code class="language-plaintext highlighter-rouge">taxonomy</code> data frames. With that we’ll aggregate the relative abundance values for each subject and those OTUs that belong to each phylum. Because we were smart in naming our columns we can join our <code class="language-plaintext highlighter-rouge">otu_data</code> data frame will be merged with the <code class="language-plaintext highlighter-rouge">taxonomy</code> data frame using the “otu” column</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">source</span><span class="p">(</span><span class="s1">'code/baxter.R'</span><span class="p">)</span><span class="w">
</span><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inner_join</span><span class="p">(</span><span class="n">otu_data</span><span class="p">,</span><span class="w"> </span><span class="n">taxonomy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">group_by</span><span class="p">(</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">phylum</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">summarize</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="nf">sum</span><span class="p">(</span><span class="n">rel_abund</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>Next we’ll merge <code class="language-plaintext highlighter-rouge">agg_phylum_data</code> our metadata data frame using the “sample” columns in both data frames. Let’s do this in one step:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">source</span><span class="p">(</span><span class="s1">'code/baxter.R'</span><span class="p">)</span><span class="w">
</span><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inner_join</span><span class="p">(</span><span class="n">otu_data</span><span class="p">,</span><span class="w"> </span><span class="n">taxonomy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">group_by</span><span class="p">(</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">phylum</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">summarize</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="nf">sum</span><span class="p">(</span><span class="n">rel_abund</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">inner_join</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">get_metadata</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">ungroup</span><span class="p">()</span><span class="w"> </span><span class="c1">#without this, the sample and phylum columns remain grouped</span><span class="w">
</span></code></pre></div></div>

<p>I’m curious what the median relative abundances are for each phylum. I suspect that there are some phyla that are super rare that I probably don’t want to include on a boxplot.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">group_by</span><span class="p">(</span><span class="n">phylum</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">summarize</span><span class="p">(</span><span class="n">median</span><span class="o">=</span><span class="n">median</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">arrange</span><span class="p">((</span><span class="n">desc</span><span class="p">(</span><span class="n">median</span><span class="p">)))</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 17 x 2
##    phylum                       median
##    &lt;chr&gt;                         &lt;dbl&gt;
##  1 Firmicutes                  0.628  
##  2 Bacteroidetes               0.251  
##  3 Actinobacteria              0.0236 
##  4 Proteobacteria              0.0102 
##  5 Verrucomicrobia             0.00902
##  6 unclassified                0.00551
##  7 Acidobacteria               0      
##  8 Candidatus_Saccharibacteria 0      
##  9 Deferribacteres             0      
## 10 Deinococcus-Thermus         0      
## 11 Elusimicrobia               0      
## 12 Fusobacteria                0      
## 13 Lentisphaerae               0      
## 14 Planctomycetes              0      
## 15 Spirochaetes                0      
## 16 Synergistetes               0      
## 17 Tenericutes                 0
</code></pre></div></div>

<p>Sure enough, the five most abundant phyla are the usual suspects: <em>Firmicutes</em>, <em>Bacteroidetes</em>, <em>Actinobacteria</em>, <em>Proteobacteria</em>, and <em>Verrucomicrobia</em>. We can get the listing of these phyla with the <code class="language-plaintext highlighter-rouge">top_n</code> function from the <code class="language-plaintext highlighter-rouge">dplyr</code> package</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">top_phyla</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">group_by</span><span class="p">(</span><span class="n">phylum</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">summarize</span><span class="p">(</span><span class="n">median</span><span class="o">=</span><span class="n">median</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">arrange</span><span class="p">((</span><span class="n">desc</span><span class="p">(</span><span class="n">median</span><span class="p">)))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="c1"># keep this so that the phyla are sorted properly</span><span class="w">
		</span><span class="n">top_n</span><span class="p">(</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">median</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">pull</span><span class="p">(</span><span class="n">phylum</span><span class="p">)</span><span class="w"> </span><span class="c1"># use pull to convert the names from a data frame to a vector of names</span><span class="w">
</span></code></pre></div></div>

<p>We want to filter <code class="language-plaintext highlighter-rouge">agg_phylum_data</code> to only contain the phyla with the five most abundant phyla. That’s fairly straightforward - we’re pretty good at running <code class="language-plaintext highlighter-rouge">filter</code> at this point. One subtle difference is that we can use the <code class="language-plaintext highlighter-rouge">%in%</code> operator which asks the question are the elements in one vector in another vector. The answer is logical, so it works nicely with <code class="language-plaintext highlighter-rouge">filter</code>. Here’s a generic boxplot</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">phylum</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">top_phyla</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/09_taxonomic_data//unnamed-chunk-26-1.png" title="plot of chunk unnamed-chunk-26" alt="plot of chunk unnamed-chunk-26" width="504" /></p>

<p>We’d like to sort the sets of bars by the median relative abundance for each phylum. We want them to be in the order that the phylum names are in <code class="language-plaintext highlighter-rouge">top_phyla</code>. Do you recall how we can set the order of a vector of characters? Remember what we did to get our diagnosis categories to line up as “Normal”, “Adenoma”, and “Cancer”? Right! We used factors</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">phylum</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">top_phyla</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">phylum</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">top_phyla</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/09_taxonomic_data//unnamed-chunk-27-1.png" title="plot of chunk unnamed-chunk-27" alt="plot of chunk unnamed-chunk-27" width="504" /></p>

<p>Happy dance. Go on. Dance! Let’s gussy this up a bit with our standard styling</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">phylum</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">top_phyla</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">phylum</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">top_phyla</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"There are no obvious phylum-level differences between the\ndiagnosis groups"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/09_taxonomic_data//unnamed-chunk-28-1.png" title="plot of chunk unnamed-chunk-28" alt="plot of chunk unnamed-chunk-28" width="504" /></p>

<hr />

<h3 id="activity-3">Activity 3</h3>
<p>Can you convert our box plot to a stripchart? Put the diagnosis groups in order of increasing severity.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">phylum</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">top_phyla</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">phylum</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">top_phyla</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_jitter</span><span class="p">(</span><span class="n">pos</span><span class="o">=</span><span class="n">position_jitterdodge</span><span class="p">(</span><span class="n">jitter.width</span><span class="o">=</span><span class="m">0.2</span><span class="p">,</span><span class="w"> </span><span class="n">dodge.width</span><span class="o">=</span><span class="m">0.8</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"There are no obvious phylum-level differences between the\ndiagnosis groups"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/09_taxonomic_data//unnamed-chunk-29-1.png" title="plot of chunk unnamed-chunk-29" alt="plot of chunk unnamed-chunk-29" width="504" /></p>
</div>

<hr />

<h3 id="activity-4">Activity 4</h3>
<p>Our y-axis is formatted to go from 0 to 1. Can you change it to go from 0 to 100?</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">
  <p>There are a few ways to do this. This might be the most direct:</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">phylum</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">top_phyla</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">phylum</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">top_phyla</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="m">100</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">agg_rel_abund</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_jitter</span><span class="p">(</span><span class="n">pos</span><span class="o">=</span><span class="n">position_jitterdodge</span><span class="p">(</span><span class="n">jitter.width</span><span class="o">=</span><span class="m">0.2</span><span class="p">,</span><span class="w"> </span><span class="n">dodge.width</span><span class="o">=</span><span class="m">0.8</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"There are no obvious phylum-level differences between the\ndiagnosis groups"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/09_taxonomic_data//unnamed-chunk-30-1.png" title="plot of chunk unnamed-chunk-30" alt="plot of chunk unnamed-chunk-30" width="504" /></p>

  <p>An alternative approach uses <code class="language-plaintext highlighter-rouge">scale_y_continuous</code></p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">phylum</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">top_phyla</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">phylum</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">top_phyla</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_y_continuous</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">0.25</span><span class="p">,</span><span class="w"> </span><span class="m">0.5</span><span class="p">,</span><span class="w"> </span><span class="m">0.75</span><span class="p">,</span><span class="w"> </span><span class="m">1.0</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="w"> </span><span class="m">25</span><span class="p">,</span><span class="w"> </span><span class="m">50</span><span class="p">,</span><span class="w"> </span><span class="m">75</span><span class="p">,</span><span class="w"> </span><span class="m">100</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"There are no obvious phylum-level differences between the\ndiagnosis groups"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance (%)"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/09_taxonomic_data//unnamed-chunk-31-1.png" title="plot of chunk unnamed-chunk-31" alt="plot of chunk unnamed-chunk-31" width="504" /></p>

  <p>This approach is a bit more flexible since you can specify the reference values you want on the y-axis.</p>
</div>

<hr />

<p>You might notice that with the exception of the <em>Firmicutes</em>, the relative abundances of the other phyla are concentrated towards the bottom of the y-axis. Sometimes it is helpful to plot relative abundance data on a log-scaled y-axis. We can use <code class="language-plaintext highlighter-rouge">scale_y_log10</code> to get a log-scaled y-axis.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">phylum</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">top_phyla</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">phylum</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">top_phyla</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"There are no obvious phylum-level differences between the\ndiagnosis groups"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_y_log10</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/09_taxonomic_data//unnamed-chunk-32-1.png" title="plot of chunk unnamed-chunk-32" alt="plot of chunk unnamed-chunk-32" width="504" /></p>

<p>This spits out two Warning messages:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Warning</span><span class="w"> </span><span class="n">messages</span><span class="o">:</span><span class="w">
</span><span class="m">1</span><span class="o">:</span><span class="w"> </span><span class="n">Transformation</span><span class="w"> </span><span class="n">introduced</span><span class="w"> </span><span class="n">infinite</span><span class="w"> </span><span class="n">values</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="n">continuous</span><span class="w"> </span><span class="n">y</span><span class="o">-</span><span class="n">axis</span><span class="w">
</span><span class="m">2</span><span class="o">:</span><span class="w"> </span><span class="n">Removed</span><span class="w"> </span><span class="m">23</span><span class="w"> </span><span class="n">rows</span><span class="w"> </span><span class="n">containing</span><span class="w"> </span><span class="n">non</span><span class="o">-</span><span class="n">finite</span><span class="w"> </span><span class="n">values</span><span class="w"> </span><span class="p">(</span><span class="n">stat_boxplot</span><span class="p">)</span><span class="n">.</span><span class="w">
</span></code></pre></div></div>

<p>These warnings come from the fact that <code class="language-plaintext highlighter-rouge">log10(0)</code> is infinity. To correct this, we can add a small number. Say less than 1/10530.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">phylum</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">top_phyla</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">phylum</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">top_phyla</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">agg_rel_abund</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="o">/</span><span class="m">21000</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"There are no obvious phylum-level differences between the\ndiagnosis groups"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_y_log10</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/09_taxonomic_data//unnamed-chunk-33-1.png" title="plot of chunk unnamed-chunk-33" alt="plot of chunk unnamed-chunk-33" width="504" /></p>

<p>That took care of the warning messages. If you did the previous Activity, you might be thinking about how we can better label that y-axis. Since we added a small number to everything, we should also add a line to indicate the limit of detection at 1/10530.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">phylum</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">top_phyla</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">phylum</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">top_phyla</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">agg_rel_abund</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="o">/</span><span class="m">21000</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_hline</span><span class="p">(</span><span class="n">yintercept</span><span class="o">=</span><span class="m">1</span><span class="o">/</span><span class="m">10530</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"gray"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"There are no obvious phylum-level differences between the\ndiagnosis groups"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance (%)"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_y_log10</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-4</span><span class="p">,</span><span class="w"> </span><span class="m">1e-3</span><span class="p">,</span><span class="w"> </span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">100</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/09_taxonomic_data//unnamed-chunk-34-1.png" title="plot of chunk unnamed-chunk-34" alt="plot of chunk unnamed-chunk-34" width="504" /></p>

<hr />

<h3 id="activity-5">Activity 5</h3>
<p>In this session we focused on phylum-level data. Let’s generate a box plot for the five most abundant taxa that are defined as deep as we can classify them. See Activity 2 for the code to generate the taxonomy data. Be careful not to write over your other data frames</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">source</span><span class="p">(</span><span class="s1">'code/baxter.R'</span><span class="p">)</span><span class="w">

</span><span class="n">deep_taxonomy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.cons.taxonomy"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">rename_all</span><span class="p">(</span><span class="n">tolower</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\(\\d*\\)"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"unclassified;"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">";$"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">".*;"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w">

</span><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inner_join</span><span class="p">(</span><span class="n">otu_data</span><span class="p">,</span><span class="w"> </span><span class="n">deep_taxonomy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">group_by</span><span class="p">(</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">taxonomy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">summarize</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="nf">sum</span><span class="p">(</span><span class="n">rel_abund</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">inner_join</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">get_metadata</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">ungroup</span><span class="p">()</span><span class="w"> </span><span class="c1">#without this, the sample and phylum columns remain grouped</span><span class="w">

</span><span class="n">top_deep_taxa</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">group_by</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">summarize</span><span class="p">(</span><span class="n">median</span><span class="o">=</span><span class="n">median</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">arrange</span><span class="p">((</span><span class="n">desc</span><span class="p">(</span><span class="n">median</span><span class="p">)))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="c1"># keep this so that the phyla are sorted properly</span><span class="w">
		</span><span class="n">top_n</span><span class="p">(</span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">median</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">pull</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">)</span><span class="w"> </span><span class="c1"># use pull to convert the names from a data frame to a vector of names</span><span class="w">

</span><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">taxonomy</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">top_deep_taxa</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">top_deep_taxa</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="m">+1</span><span class="o">/</span><span class="m">21000</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_hline</span><span class="p">(</span><span class="n">yintercept</span><span class="o">=</span><span class="m">1</span><span class="o">/</span><span class="m">10530</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"gray"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"There are no obvious phylum-level differences between the\ndiagnosis groups"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance (%)"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_y_log10</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-4</span><span class="p">,</span><span class="w"> </span><span class="m">1e-3</span><span class="p">,</span><span class="w"> </span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">100</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/09_taxonomic_data//unnamed-chunk-35-1.png" title="plot of chunk unnamed-chunk-35" alt="plot of chunk unnamed-chunk-35" width="504" /></p>
</div>

<hr />

<h2 id="hypothesis-testing">Hypothesis testing</h2>
<p>We’ve been able to generate strip charts and box plots for the most abundant phyla, but it would be nice to know whether any of these phyla have a significantly different representation across the diagnosis groups. We saw in a previous lesson how we can use the Kruskal-Wallis test to test for significance when we have data that are not normally distributed. But how do we do that across groups within a data frame? As we’ve seen before, we’ll group our data by the “phylum” column. Then for each group we’ll use the <code class="language-plaintext highlighter-rouge">nest</code>/<code class="language-plaintext highlighter-rouge">mutate</code>/<code class="language-plaintext highlighter-rouge">map</code>/<code class="language-plaintext highlighter-rouge">unnest</code> workflow to run <code class="language-plaintext highlighter-rouge">kruskal.test</code> as we did in the last lesson.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">broom</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">purrr</span><span class="p">)</span><span class="w">

</span><span class="n">phylum_tests</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">nest</span><span class="p">(</span><span class="n">sample_data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="o">-</span><span class="n">phylum</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">test</span><span class="o">=</span><span class="n">map</span><span class="p">(</span><span class="n">sample_data</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="n">tidy</span><span class="p">(</span><span class="n">kruskal.test</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">~</span><span class="n">diagnosis</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="o">=</span><span class="n">.</span><span class="p">))))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">unnest</span><span class="p">(</span><span class="n">test</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Of course, because we’re doing 17 hypothesis tests, we want to correct our P-values for multiple comparisons, sort the data frame in ascending order by corrected P-value, and then get the names of the phyla with significant differences</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">phylum_tests</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">nest</span><span class="p">(</span><span class="n">sample_data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="o">-</span><span class="n">phylum</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">test</span><span class="o">=</span><span class="n">map</span><span class="p">(</span><span class="n">sample_data</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="n">tidy</span><span class="p">(</span><span class="n">kruskal.test</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">~</span><span class="n">diagnosis</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="o">=</span><span class="n">.</span><span class="p">))))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">unnest</span><span class="p">(</span><span class="n">test</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">p.value.adj</span><span class="o">=</span><span class="n">p.adjust</span><span class="p">(</span><span class="n">p.value</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="o">=</span><span class="s2">"BH"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">arrange</span><span class="p">(</span><span class="n">p.value.adj</span><span class="p">)</span><span class="w">

</span><span class="n">sig_phyla</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">phylum_tests</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">filter</span><span class="p">(</span><span class="n">p.value.adj</span><span class="w"> </span><span class="o">&lt;=</span><span class="w"> </span><span class="m">0.05</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">pull</span><span class="p">(</span><span class="n">phylum</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>As we did before, let’s make a box plot of the significant phyla</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_phylum_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">phylum</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">sig_phyla</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">phylum</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">sig_phyla</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="m">+1</span><span class="o">/</span><span class="m">21000</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">phylum</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_hline</span><span class="p">(</span><span class="n">yintercept</span><span class="o">=</span><span class="m">1</span><span class="o">/</span><span class="m">10530</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"gray"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Two phyla are significantly associated with disease progression"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance (%)"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_y_log10</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-4</span><span class="p">,</span><span class="w"> </span><span class="m">1e-3</span><span class="p">,</span><span class="w"> </span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">100</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/09_taxonomic_data//unnamed-chunk-38-1.png" title="plot of chunk unnamed-chunk-38" alt="plot of chunk unnamed-chunk-38" width="504" /></p>

<p>These plots are far preferable to the standard pie and stacked bar charts because they focus on those taxa that are significantly different from each other, allow you to perceive the variation in the data, and give a side-by-side comparison of the taxa.</p>

<hr />

<h3 id="activity-6">Activity 6</h3>
<p>Following up on an earlier Activity, identify those taxa that are significantly different between the diagnosis states, when defining them to their deepest classification.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">deep_taxonomy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.cons.taxonomy"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">rename_all</span><span class="p">(</span><span class="n">tolower</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\(\\d*\\)"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"unclassified;"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">";$"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">".*;"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w">

</span><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inner_join</span><span class="p">(</span><span class="n">otu_data</span><span class="p">,</span><span class="w"> </span><span class="n">deep_taxonomy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">group_by</span><span class="p">(</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">taxonomy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">summarize</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="nf">sum</span><span class="p">(</span><span class="n">rel_abund</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">inner_join</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">get_metadata</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">ungroup</span><span class="p">()</span><span class="w"> </span><span class="c1">#without this, the sample and phylum columns remain grouped</span><span class="w">

</span><span class="n">deep_tests</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">nest</span><span class="p">(</span><span class="n">sample_data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="o">-</span><span class="n">taxonomy</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">test</span><span class="o">=</span><span class="n">map</span><span class="p">(</span><span class="n">sample_data</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="n">tidy</span><span class="p">(</span><span class="n">kruskal.test</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">~</span><span class="n">diagnosis</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="o">=</span><span class="n">.</span><span class="p">))))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">unnest</span><span class="p">(</span><span class="n">test</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">p.value.adj</span><span class="o">=</span><span class="n">p.adjust</span><span class="p">(</span><span class="n">p.value</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="o">=</span><span class="s2">"BH"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">arrange</span><span class="p">(</span><span class="n">p.value.adj</span><span class="p">)</span><span class="w">

</span><span class="n">sig_deep</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">deep_tests</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">filter</span><span class="p">(</span><span class="n">p.value.adj</span><span class="w"> </span><span class="o">&lt;=</span><span class="w"> </span><span class="m">0.05</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">pull</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">)</span><span class="w">

</span><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">taxonomy</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">sig_deep</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">sig_deep</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="o">/</span><span class="m">10531</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Populations associated with oral disease are associated with\na cancer diagnosis while others associated with fermentation\nare associated with a normal diagnosis"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance (%)"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_y_log10</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-4</span><span class="p">,</span><span class="w"> </span><span class="m">1e-3</span><span class="p">,</span><span class="w"> </span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">100</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/09_taxonomic_data//unnamed-chunk-39-1.png" title="plot of chunk unnamed-chunk-39" alt="plot of chunk unnamed-chunk-39" width="504" /></p>

  <p>That’s kind of hard to see. We can add <code class="language-plaintext highlighter-rouge">coord_flip</code> to turn the axes</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">taxonomy</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">sig_deep</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">sig_deep</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="o">/</span><span class="m">10531</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Populations associated with oral disease are associated with\na cancer diagnosis while others associated with fermentation\nare associated with a normal diagnosis"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance (%)"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_y_log10</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-4</span><span class="p">,</span><span class="w"> </span><span class="m">1e-3</span><span class="p">,</span><span class="w"> </span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">100</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/09_taxonomic_data//unnamed-chunk-40-1.png" title="plot of chunk unnamed-chunk-40" alt="plot of chunk unnamed-chunk-40" width="504" /></p>
</div>

<hr />

<h3 id="activity-7">Activity 7</h3>
<p>Instead of grouping individuals by three diagnosis groups, group them as having normal colons or a lesion (i.e. adenoma or cancer diagnosis). Identify those taxa that are significantly different between the diagnosis states, when defining them to their deepest classification. Sort the populations by overall mean relative abundance.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">deep_taxonomy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.cons.taxonomy"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">rename_all</span><span class="p">(</span><span class="n">tolower</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"\\(\\d*\\)"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"unclassified;"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">";$"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">".*;"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w">

</span><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inner_join</span><span class="p">(</span><span class="n">otu_data</span><span class="p">,</span><span class="w"> </span><span class="n">deep_taxonomy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">group_by</span><span class="p">(</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">taxonomy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">summarize</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="nf">sum</span><span class="p">(</span><span class="n">rel_abund</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">inner_join</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">get_metadata</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">lesion</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">diagnosis</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="s1">'normal'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">ungroup</span><span class="p">()</span><span class="w"> </span><span class="c1">#without this, the sample and phylum columns remain grouped</span><span class="w">

</span><span class="n">deep_tests</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">nest</span><span class="p">(</span><span class="n">sample_data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="o">-</span><span class="n">taxonomy</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">test</span><span class="o">=</span><span class="n">map</span><span class="p">(</span><span class="n">sample_data</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="n">tidy</span><span class="p">(</span><span class="n">kruskal.test</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">~</span><span class="n">diagnosis</span><span class="p">,</span><span class="w"> </span><span class="n">data</span><span class="o">=</span><span class="n">.</span><span class="p">))))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">unnest</span><span class="p">(</span><span class="n">test</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">p.value.adj</span><span class="o">=</span><span class="n">p.adjust</span><span class="p">(</span><span class="n">p.value</span><span class="p">,</span><span class="w"> </span><span class="n">method</span><span class="o">=</span><span class="s2">"BH"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">arrange</span><span class="p">(</span><span class="n">p.value.adj</span><span class="p">)</span><span class="w">

</span><span class="n">sig_deep</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">deep_tests</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">filter</span><span class="p">(</span><span class="n">p.value.adj</span><span class="w"> </span><span class="o">&lt;=</span><span class="w"> </span><span class="m">0.05</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">pull</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">)</span><span class="w">

</span><span class="n">sig_abund_deep</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">filter</span><span class="p">(</span><span class="n">taxonomy</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">sig_deep</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">group_by</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">summarize</span><span class="p">(</span><span class="n">mean</span><span class="o">=</span><span class="n">mean</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">mean</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">pull</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">)</span><span class="w">

</span><span class="n">agg_deep_data</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">taxonomy</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">sig_deep</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">taxonomy</span><span class="o">=</span><span class="n">factor</span><span class="p">(</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="n">sig_abund_deep</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">agg_rel_abund</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="o">/</span><span class="m">10531</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">taxonomy</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">agg_rel_abund</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">lesion</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_boxplot</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"darkgreen"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="kc">FALSE</span><span class="p">,</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Lesion"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Genera that are significantly different in relative abundance\nbetween healthy individuals and those with lesions"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Relative abundance (%)"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_y_log10</span><span class="p">(</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-4</span><span class="p">,</span><span class="w"> </span><span class="m">1e-3</span><span class="p">,</span><span class="w"> </span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w"> </span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1e-2</span><span class="p">,</span><span class="w"> </span><span class="m">1e-1</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">10</span><span class="p">,</span><span class="w"> </span><span class="m">100</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_flip</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/09_taxonomic_data//unnamed-chunk-41-1.png" title="plot of chunk unnamed-chunk-41" alt="plot of chunk unnamed-chunk-41" width="504" /></p>
</div>

<hr />

<h3 id="activity-8">Activity 8</h3>
<p>This lesson deviates from what is typically the norm in the microbiome literature. It is common to see researchers use pie charts and stacked bar charts to depict relative abundance data. For some background, run <code class="language-plaintext highlighter-rouge">?pie</code> and read the “Note” section. Based on using strip charts and box plots to represent relative abundance data what do you see as the strengths and weaknesses of the approach used on this lesson versus using pie or stacked bar charts?</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">
  <p><strong><em>Strengths</em></strong></p>
  <ul>
    <li>Can see distribution and variation in data</li>
    <li>Easier to focus attention on what the researcher wants to show the reader rather than on showing 100s of wedges</li>
    <li>Easier to compare relative abundance of taxa when they are on the same y-axis</li>
  </ul>

  <p><strong><em>Weaknesses</em></strong></p>
  <ul>
    <li>It’s a “different” approach, there’s a lot of inertia to use stacked bar plots</li>
    <li>Sometimes there are more taxa to show than we have space for (need to make hard choices!)</li>
  </ul>
</div>
:ET