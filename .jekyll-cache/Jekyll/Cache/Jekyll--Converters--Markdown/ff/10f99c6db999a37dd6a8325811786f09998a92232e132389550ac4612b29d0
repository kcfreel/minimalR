I"_<h2 id="topics">Topics</h2>
<ul>
  <li>Scripting analysis</li>
  <li>Making data “tidy”</li>
  <li>Generating line plots</li>
  <li>Rarefaction curves</li>
  <li>Adding lines to annotate plots</li>
  <li>Working with text</li>
</ul>

<h2 id="getting-organized">Getting organized</h2>
<p>To this point, we’ve had a chunk of code that we’ve been copying and pasting into the terminal to generate the <code class="language-plaintext highlighter-rouge">metadata</code> data frame. Perhaps you’ve been saving your code to a text file as we’ve been going a long, which has made it easier to copy and paste. But this process is pretty risky since we might forget to highlight all of the code we want or we may have multiple versions lying around. Before we move on to building line plots, we’re going to see how we can encapsulate the code for the <code class="language-plaintext highlighter-rouge">metadata</code> data frame in a script and how we can use that script in our analyses. To help organize our project, we’ll create a directory in our project directory called <code class="language-plaintext highlighter-rouge">code</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dir.create</span><span class="p">(</span><span class="s2">"code"</span><span class="p">,</span><span class="w"> </span><span class="n">showWarnings</span><span class="o">=</span><span class="kc">FALSE</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Open a text file either using <code class="language-plaintext highlighter-rouge">RStudio</code>, <code class="language-plaintext highlighter-rouge">atom</code>, or another text editor and copy and paste this code to the file:</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">readxl</span><span class="p">)</span><span class="w">
 
</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_excel</span><span class="p">(</span><span class="n">path</span><span class="o">=</span><span class="s2">"raw_data/baxter.metadata.xlsx"</span><span class="p">,</span><span class="w">
		</span><span class="n">col_types</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="n">sample</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"text"</span><span class="p">,</span><span class="w"> </span><span class="n">fit_result</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"numeric"</span><span class="p">,</span><span class="w"> </span><span class="n">Site</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"text"</span><span class="p">,</span><span class="w">
				</span><span class="n">Dx_Bin</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"text"</span><span class="p">,</span><span class="w"> </span><span class="n">dx</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"text"</span><span class="p">,</span><span class="w"> </span><span class="n">Hx_Prev</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"logical"</span><span class="p">,</span><span class="w">
				</span><span class="n">Hx_of_Polyps</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"logical"</span><span class="p">,</span><span class="w"> </span><span class="n">Age</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"numeric"</span><span class="p">,</span><span class="w"> </span><span class="n">Gender</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"text"</span><span class="p">,</span><span class="w">
				</span><span class="n">Smoke</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"logical"</span><span class="p">,</span><span class="w"> </span><span class="n">Diabetic</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"logical"</span><span class="p">,</span><span class="w"> </span><span class="n">Hx_Fam_CRC</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"logical"</span><span class="p">,</span><span class="w">
				</span><span class="n">Height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"numeric"</span><span class="p">,</span><span class="w"> </span><span class="n">Weight</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"numeric"</span><span class="p">,</span><span class="w"> </span><span class="n">NSAID</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"logical"</span><span class="p">,</span><span class="w">
				</span><span class="n">Diabetes_Med</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"logical"</span><span class="p">,</span><span class="w"> </span><span class="n">stage</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"text"</span><span class="p">)</span><span class="w">
	</span><span class="p">)</span><span class="w">
</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">Height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">na_if</span><span class="p">(</span><span class="n">Height</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w">
</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">Weight</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">na_if</span><span class="p">(</span><span class="n">Weight</span><span class="p">,</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w">
</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">Site</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">recode</span><span class="p">(</span><span class="n">.x</span><span class="o">=</span><span class="n">Site</span><span class="p">,</span><span class="w"> </span><span class="s2">"U of Michigan"</span><span class="o">=</span><span class="s2">"U Michigan"</span><span class="p">))</span><span class="w">
</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">Dx_Bin</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">recode</span><span class="p">(</span><span class="n">.x</span><span class="o">=</span><span class="n">Dx_Bin</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer."</span><span class="o">=</span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w">
</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">Gender</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">recode</span><span class="p">(</span><span class="n">.x</span><span class="o">=</span><span class="n">Gender</span><span class="p">,</span><span class="w"> </span><span class="s2">"f"</span><span class="o">=</span><span class="s2">"female"</span><span class="p">,</span><span class="w"> </span><span class="s2">"m"</span><span class="o">=</span><span class="s2">"male"</span><span class="p">))</span><span class="w">

</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rename_all</span><span class="p">(</span><span class="n">.tbl</span><span class="o">=</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">.funs</span><span class="o">=</span><span class="n">tolower</span><span class="p">)</span><span class="w">
</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rename</span><span class="p">(</span><span class="n">.data</span><span class="o">=</span><span class="n">metadata</span><span class="p">,</span><span class="w">
		</span><span class="n">previous_history</span><span class="o">=</span><span class="n">hx_prev</span><span class="p">,</span><span class="w">
		</span><span class="n">history_of_polyps</span><span class="o">=</span><span class="n">hx_of_polyps</span><span class="p">,</span><span class="w">
		</span><span class="n">family_history_of_crc</span><span class="o">=</span><span class="n">hx_fam_crc</span><span class="p">,</span><span class="w">
		</span><span class="n">diagnosis_bin</span><span class="o">=</span><span class="n">dx_bin</span><span class="p">,</span><span class="w">
		</span><span class="n">diagnosis</span><span class="o">=</span><span class="n">dx</span><span class="p">,</span><span class="w">
		</span><span class="n">sex</span><span class="o">=</span><span class="n">gender</span><span class="p">)</span><span class="w">

</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">diagnosis</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="n">diagnosis</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">)))</span><span class="w">

</span></code></pre></div></div>

<p>Within your new <code class="language-plaintext highlighter-rouge">code</code> directory, save the file as <code class="language-plaintext highlighter-rouge">baxter.R</code>. Re-start <code class="language-plaintext highlighter-rouge">R</code> and type <code class="language-plaintext highlighter-rouge">metadata</code> at the prompt. You should get an error saying <strong><code class="language-plaintext highlighter-rouge">Error: object 'metadata' not found</code></strong>. If you don’t this would be a good time to remind you that you should not save your session on quitting and you should not load your previous session on starting. R will prompt you about the former and automatically to the latter unless you have R properly configured. You can set this in the RStudio preferences. Trust me, these things causes major headaches and reduce the reproducibility of your analyses.</p>

<p>How do we get metadata back into R? We can load code from external files in a few different ways. One that we’ve already seen is with the <code class="language-plaintext highlighter-rouge">library</code> function, which loads code from external packages. We can also use the <code class="language-plaintext highlighter-rouge">source</code> command. Before running <code class="language-plaintext highlighter-rouge">source</code>, let’s see what variables are already loaded into R with the <code class="language-plaintext highlighter-rouge">ls</code> function.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ls</span><span class="p">()</span><span class="w">
</span><span class="n">source</span><span class="p">(</span><span class="s1">'code/baxter.R'</span><span class="p">)</span><span class="w">
</span><span class="n">ls</span><span class="p">()</span><span class="w">
</span><span class="n">metadata</span><span class="w">
</span></code></pre></div></div>

<p>Nice, eh? Before we ran <code class="language-plaintext highlighter-rouge">source</code>, the result of <code class="language-plaintext highlighter-rouge">ls</code> was <code class="language-plaintext highlighter-rouge">character(0)</code>, which means there is nothing. After running <code class="language-plaintext highlighter-rouge">source</code>, <code class="language-plaintext highlighter-rouge">ls</code> tells us that the <code class="language-plaintext highlighter-rouge">metadata</code> variable is loaded. Our source file only contains variable - <code class="language-plaintext highlighter-rouge">metadata</code> - it’s pretty simple. Do you remember that we previously created a couple of functions related to the BMI? Let’s bring those into our <code class="language-plaintext highlighter-rouge">baxter.R</code> file as functions below our metadata code.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="n">get_bmi</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">weight_kg</span><span class="p">,</span><span class="w"> </span><span class="n">height_cm</span><span class="p">){</span><span class="w">
	</span><span class="nf">return</span><span class="p">(</span><span class="n">weight_kg</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="p">(</span><span class="n">height_cm</span><span class="o">/</span><span class="m">100</span><span class="p">)</span><span class="w"> </span><span class="o">^</span><span class="w"> </span><span class="m">2</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">get_bmi_category</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">weight_kg</span><span class="p">,</span><span class="w"> </span><span class="n">height_cm</span><span class="p">){</span><span class="w">
	</span><span class="n">bmi</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_bmi</span><span class="p">(</span><span class="n">weight_kg</span><span class="p">,</span><span class="w"> </span><span class="n">height_cm</span><span class="p">)</span><span class="w">

	</span><span class="n">bmi_cat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">case_when</span><span class="p">(</span><span class="n">bmi</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">30</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"obese"</span><span class="p">,</span><span class="w">
			</span><span class="n">bmi</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">25</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"overweight"</span><span class="p">,</span><span class="w">
 			</span><span class="n">bmi</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">18.5</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"normal"</span><span class="p">,</span><span class="w">
			</span><span class="nf">is.na</span><span class="p">(</span><span class="n">bmi</span><span class="p">)</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="kc">NA_character_</span><span class="p">,</span><span class="w">
			</span><span class="kc">TRUE</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="s2">"underweight"</span><span class="p">)</span><span class="w">

	</span><span class="nf">return</span><span class="p">(</span><span class="n">bmi_cat</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">is_obese</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">weight_kg</span><span class="p">,</span><span class="w"> </span><span class="n">height_cm</span><span class="p">){</span><span class="w">
	</span><span class="n">bmi_category</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_bmi_category</span><span class="p">(</span><span class="n">weight_kg</span><span class="p">,</span><span class="w"> </span><span class="n">height_cm</span><span class="p">)</span><span class="w">
	</span><span class="nf">return</span><span class="p">(</span><span class="n">bmi_category</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"obese"</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Save <code class="language-plaintext highlighter-rouge">baxter.R</code> and re-run the <code class="language-plaintext highlighter-rouge">source</code> and <code class="language-plaintext highlighter-rouge">ls</code> functions.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">source</span><span class="p">(</span><span class="s2">"code/baxter.R"</span><span class="p">)</span><span class="w">
</span><span class="n">ls</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p>We now see <code class="language-plaintext highlighter-rouge">get_bmi</code>, <code class="language-plaintext highlighter-rouge">get_bmi_category</code>, <code class="language-plaintext highlighter-rouge">is_obese</code>, and <code class="language-plaintext highlighter-rouge">metadata</code>. Remember that functions are variables. To make sure it all works, let’s test our functions</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">get_bmi</span><span class="p">(</span><span class="n">height_cm</span><span class="o">=</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">weight_kg</span><span class="o">=</span><span class="m">130</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] 325000
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">get_bmi_category</span><span class="p">(</span><span class="n">height_cm</span><span class="o">=</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">weight_kg</span><span class="o">=</span><span class="m">130</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "obese"
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">is_obese</span><span class="p">(</span><span class="n">height_cm</span><span class="o">=</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">weight_kg</span><span class="o">=</span><span class="m">130</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] TRUE
</code></pre></div></div>

<p>The cool thing about this is that wherever we want to calculate a BMI value in our project, <code class="language-plaintext highlighter-rouge">get_bmi</code> is available to us after we source <code class="language-plaintext highlighter-rouge">baxter.R</code>. In the grand scheme of things, the code to generate the <code class="language-plaintext highlighter-rouge">metadata</code> data frame was pretty simple - there’s only one variable: <code class="language-plaintext highlighter-rouge">metadata</code>. If our code had been more complex and we had used multiple variables to generate <code class="language-plaintext highlighter-rouge">metadata</code>, then all those variables would be available to us. That would probably be less than ideal. What happens if you enter <code class="language-plaintext highlighter-rouge">bmi_cat</code> at the prompt? You get an error message, right? That’s because it’s within the body of the <code class="language-plaintext highlighter-rouge">get_bmi_category</code> function and is hidden to any code outside that function. Let’s convert our metadata code into a function we’ll call <code class="language-plaintext highlighter-rouge">get_metadata</code>. You will need to edit <code class="language-plaintext highlighter-rouge">baxter.R</code> like this…</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyverse</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">readxl</span><span class="p">)</span><span class="w">

</span><span class="n">get_metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(){</span><span class="w">

	</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_excel</span><span class="p">(</span><span class="n">path</span><span class="o">=</span><span class="s2">"raw_data/baxter.metadata.xlsx"</span><span class="p">,</span><span class="w">

</span><span class="n">...</span><span class="w">

			</span><span class="n">sex</span><span class="o">=</span><span class="n">gender</span><span class="p">)</span><span class="w">

	</span><span class="nf">return</span><span class="p">(</span><span class="n">metadata</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Go ahead and restart R. Now try this</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">source</span><span class="p">(</span><span class="s1">'code/baxter.R'</span><span class="p">)</span><span class="w">
</span><span class="n">ls</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p>Instead of seeing <code class="language-plaintext highlighter-rouge">metadata</code> we now see <code class="language-plaintext highlighter-rouge">get_metadata</code>. But how do we get a <code class="language-plaintext highlighter-rouge">metadata</code> data frame?</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_metadata</span><span class="p">()</span><span class="w">
</span><span class="n">metadata</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 490 x 17
##    sample fit_result site  diagnosis_bin diagnosis previous_history
##    &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;         &lt;fct&gt;     &lt;lgl&gt;           
##  1 20036…          0 U Mi… High Risk No… normal    FALSE           
##  2 20056…          0 U Mi… High Risk No… normal    FALSE           
##  3 20076…         26 U Mi… High Risk No… normal    FALSE           
##  4 20096…         10 Toro… Adenoma       adenoma   FALSE           
##  5 20136…          0 U Mi… Normal        normal    FALSE           
##  6 20156…          0 Dana… High Risk No… normal    FALSE           
##  7 20176…          7 Dana… Cancer        cancer    TRUE            
##  8 20196…         19 U Mi… Normal        normal    FALSE           
##  9 20236…          0 Dana… High Risk No… normal    TRUE            
## 10 20256…       1509 U Mi… Cancer        cancer    TRUE            
## # … with 480 more rows, and 11 more variables: history_of_polyps &lt;lgl&gt;,
## #   age &lt;dbl&gt;, sex &lt;chr&gt;, smoke &lt;lgl&gt;, diabetic &lt;lgl&gt;,
## #   family_history_of_crc &lt;lgl&gt;, height &lt;dbl&gt;, weight &lt;dbl&gt;, nsaid &lt;lgl&gt;,
## #   diabetes_med &lt;lgl&gt;, stage &lt;chr&gt;
</code></pre></div></div>

<p>We now have a DRY way of providing the code to generate a consistent <code class="language-plaintext highlighter-rouge">metadata</code> data frame across our project.  You might be thinking that this isn’t so special since you can dump all of your code for your project into <code class="language-plaintext highlighter-rouge">baxter.R</code>. Sure, you could. Most people who have been working to make their code reusable and reproducible find value to breaking their code up across multiple files. For example, we might want to make an ordination figure like we started with, a strip chart of FIT result by diagnosis group, and a strip chart of diversity by diagnosis group. My preference is to have a separate R script file to build each of these figures. That way if I want to come back and change my diversity value from Shannon to inverse Simpson indices in the third figure, I would only need to re-run the code for that figure. Similarly, having a primary “utility” R script that has a lot of common features in it, I can now source <code class="language-plaintext highlighter-rouge">baxter.R</code> in each of the figures where I need metadata. Also, if I were really on the ball, I could define my color scheme in <code class="language-plaintext highlighter-rouge">baxter.R</code> as a variable and then use that variable throughout my figures. Ultimately, as a project gets larger, it helps to break up your code in to different R scripts as a way of organizing your code.</p>

<p>Before we move on to generating line graphs, I want to leave you with a stylistic note. In your R script files, it helps to put all your <code class="language-plaintext highlighter-rouge">library</code> and <code class="language-plaintext highlighter-rouge">source</code> function calls at the top of the script. This way it is obvious to anyone that picks up your script what packages they need to install and what other R scripts your script depends on.</p>

<hr />

<h3 id="activity-1">Activity 1</h3>
<p>Modify <code class="language-plaintext highlighter-rouge">get_metadata</code> to add a <code class="language-plaintext highlighter-rouge">bmi</code>, <code class="language-plaintext highlighter-rouge">bmi_category</code>, and <code class="language-plaintext highlighter-rouge">is_obese</code> column to the <code class="language-plaintext highlighter-rouge">metadata</code> data frame. Confirm that your edits worked by running <code class="language-plaintext highlighter-rouge">source('code/baxter.R')</code> and then looking at the values in <code class="language-plaintext highlighter-rouge">metadata</code></p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">
  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">...</span><span class="w">
			</span><span class="n">diagnosis</span><span class="o">=</span><span class="n">dx</span><span class="p">,</span><span class="w">
			</span><span class="n">sex</span><span class="o">=</span><span class="n">gender</span><span class="p">)</span><span class="w">

	</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">mutate</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">diagnosis</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="n">diagnosis</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">)))</span><span class="w">

	</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">metadata</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
		</span><span class="n">mutate</span><span class="p">(</span><span class="n">bmi</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">get_bmi</span><span class="p">(</span><span class="n">weight_kg</span><span class="o">=</span><span class="n">weight</span><span class="p">,</span><span class="w"> </span><span class="n">height_cm</span><span class="o">=</span><span class="n">height</span><span class="p">),</span><span class="w">
			</span><span class="n">bmi_category</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">get_bmi_category</span><span class="p">(</span><span class="n">weight_kg</span><span class="o">=</span><span class="n">weight</span><span class="p">,</span><span class="w"> </span><span class="n">height_cm</span><span class="o">=</span><span class="n">height</span><span class="p">),</span><span class="w">
			</span><span class="n">obese</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">is_obese</span><span class="p">(</span><span class="n">weight_kg</span><span class="o">=</span><span class="n">weight</span><span class="p">,</span><span class="w"> </span><span class="n">height_cm</span><span class="o">=</span><span class="n">height</span><span class="p">)</span><span class="w">
		</span><span class="p">)</span><span class="w">

	</span><span class="nf">return</span><span class="p">(</span><span class="n">metadata</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>  </div>
</div>

<hr />

<h3 id="activity-2">Activity 2</h3>
<p>Create a new file in the <code class="language-plaintext highlighter-rouge">code</code> directory called <code class="language-plaintext highlighter-rouge">plot_ordination.R</code> that contains the code to build the first figure that we talked about in this series of lessons. Create a <code class="language-plaintext highlighter-rouge">figures</code> directory and output a pdf version of your plot to <code class="language-plaintext highlighter-rouge">figures</code>.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">
  <p>This code would go into <code class="language-plaintext highlighter-rouge">code/plot_ordination.R</code>. Note that the the <code class="language-plaintext highlighter-rouge">library(tidyverse)</code> line isn’t necessary since it’s already being loaded in <code class="language-plaintext highlighter-rouge">baxter.R</code></p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="n">source</span><span class="p">(</span><span class="s2">"code/baxter.R"</span><span class="p">)</span><span class="w">

</span><span class="n">pcoa</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.braycurtis.pcoa.axes"</span><span class="p">,</span><span class="w">
		</span><span class="n">col_types</span><span class="o">=</span><span class="n">cols</span><span class="p">(</span><span class="n">group</span><span class="o">=</span><span class="n">col_character</span><span class="p">())</span><span class="w">
	</span><span class="p">)</span><span class="w">

</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_metadata</span><span class="p">()</span><span class="w">
</span><span class="n">metadata_pcoa</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inner_join</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">pcoa</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"sample"</span><span class="o">=</span><span class="s2">"group"</span><span class="p">))</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_pcoa</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">axis1</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">axis2</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">geom_point</span><span class="p">(</span><span class="n">shape</span><span class="o">=</span><span class="m">19</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
		</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
		</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
		</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">coord_fixed</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"PCoA of Bray-Curtis Distances Between Stool Samples"</span><span class="p">,</span><span class="w">
		</span><span class="n">x</span><span class="o">=</span><span class="s2">"PCo Axis 1"</span><span class="p">,</span><span class="w">
		</span><span class="n">y</span><span class="o">=</span><span class="s2">"PCo Axis 2"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">

</span><span class="n">ggsave</span><span class="p">(</span><span class="s2">"figures/ordination.pdf"</span><span class="p">)</span><span class="w">

</span></code></pre></div>  </div>

  <p>Once <code class="language-plaintext highlighter-rouge">code/plot_ordination.R</code> is saved, in your terminal you can run <code class="language-plaintext highlighter-rouge">source('code/plot_ordination.R')</code> to generate the following</p>

  <p><img src="assets/images/07_line_plots//unnamed-chunk-14-1.png" title="plot of chunk unnamed-chunk-14" alt="plot of chunk unnamed-chunk-14" width="504" /></p>
</div>

<hr />

<h2 id="plotting-associated-data-with-line-plots">Plotting associated data with line plots</h2>

<p>Frequently we may have continuous data that was collected in a specific order. Usually order is dictated by time. We could use a scatterplot like we did for the ordination, but to indicate that the samples are linked, we would like to connect them with a line segment. This is what we’ll call a line plot. If you have two samples from the same individual or site that perhaps represent a pre and post time point and you connect the points with a line, this is a special type of line plot called a slope plot. The key is that for some data we can connect observations with a line and that line indicates that the points are connected.</p>

<p>For better or worse, microbial ecologists are frequently obsessed with plotting rarefaction curves. These curves indicate how well one has sampled the most abundant sequences and can be used to make comparisons based on a common number of sequences. Rarefaction is really a tool for asking the question, “How many types of things would I have observed if I had only sampled N things?” We can then compare the number of types across samples where we collected different numbers of things. The file <code class="language-plaintext highlighter-rouge">baxter.rarefaction</code> contains the rarefied version of the data in the <code class="language-plaintext highlighter-rouge">baxter.shared</code> file, both of which are in the <code class="language-plaintext highlighter-rouge">raw_data</code> folder.</p>

<p>Go ahead and write the code to read the rarefaction file into a variable called <code class="language-plaintext highlighter-rouge">rarefy</code>. Using the approach from the first session, take a look at this file to get a sense of what it looks like.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rarefy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.rarefaction"</span><span class="p">)</span><span class="w">
</span><span class="n">rarefy</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 4,790 x 1,471
##    numsampled `0.03-2003650` `lci-2003650` `hci-2003650` `0.03-2005650`
##         &lt;dbl&gt;          &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;
##  1          1            1               1             1            1  
##  2        100           43.9            39            52           43.2
##  3        200           59.7            54            69           61.2
##  4        300           70.3            64            78           73.6
##  5        400           78.6            70            85           83.0
##  6        500           85.4            75            94           91.0
##  7        600           92.2            84           100           98.4
##  8        700           97.6            89           106          105. 
##  9        800          102.             94           111          111. 
## 10        900          107.             99           118          117. 
## # … with 4,780 more rows, and 1,466 more variables: `lci-2005650` &lt;dbl&gt;,
## #   `hci-2005650` &lt;dbl&gt;, `0.03-2007660` &lt;dbl&gt;, `lci-2007660` &lt;dbl&gt;,
## #   `hci-2007660` &lt;dbl&gt;, `0.03-2009650` &lt;dbl&gt;, `lci-2009650` &lt;dbl&gt;,
## #   `hci-2009650` &lt;dbl&gt;, `0.03-2013660` &lt;dbl&gt;, `lci-2013660` &lt;dbl&gt;,
## #   `hci-2013660` &lt;dbl&gt;, `0.03-2015650` &lt;dbl&gt;, `lci-2015650` &lt;dbl&gt;,
## #   `hci-2015650` &lt;dbl&gt;, `0.03-2017660` &lt;dbl&gt;, `lci-2017660` &lt;dbl&gt;,
## #   `hci-2017660` &lt;dbl&gt;, `0.03-2019651` &lt;dbl&gt;, `lci-2019651` &lt;dbl&gt;,
## #   `hci-2019651` &lt;dbl&gt;, `0.03-2023680` &lt;dbl&gt;, `lci-2023680` &lt;dbl&gt;,
## #   `hci-2023680` &lt;dbl&gt;, `0.03-2025653` &lt;dbl&gt;, `lci-2025653` &lt;dbl&gt;,
## #   `hci-2025653` &lt;dbl&gt;, `0.03-2027653` &lt;dbl&gt;, `lci-2027653` &lt;dbl&gt;,
## #   `hci-2027653` &lt;dbl&gt;, `0.03-2029650` &lt;dbl&gt;, `lci-2029650` &lt;dbl&gt;,
## #   `hci-2029650` &lt;dbl&gt;, `0.03-2031650` &lt;dbl&gt;, `lci-2031650` &lt;dbl&gt;,
## #   `hci-2031650` &lt;dbl&gt;, `0.03-2033650` &lt;dbl&gt;, `lci-2033650` &lt;dbl&gt;,
## #   `hci-2033650` &lt;dbl&gt;, `0.03-2035650` &lt;dbl&gt;, `lci-2035650` &lt;dbl&gt;,
## #   `hci-2035650` &lt;dbl&gt;, `0.03-2037653` &lt;dbl&gt;, `lci-2037653` &lt;dbl&gt;,
## #   `hci-2037653` &lt;dbl&gt;, `0.03-2039650` &lt;dbl&gt;, `lci-2039650` &lt;dbl&gt;,
## #   `hci-2039650` &lt;dbl&gt;, `0.03-2041650` &lt;dbl&gt;, `lci-2041650` &lt;dbl&gt;,
## #   `hci-2041650` &lt;dbl&gt;, `0.03-2043650` &lt;dbl&gt;, `lci-2043650` &lt;dbl&gt;,
## #   `hci-2043650` &lt;dbl&gt;, `0.03-2045653` &lt;dbl&gt;, `lci-2045653` &lt;dbl&gt;,
## #   `hci-2045653` &lt;dbl&gt;, `0.03-2049653` &lt;dbl&gt;, `lci-2049653` &lt;dbl&gt;,
## #   `hci-2049653` &lt;dbl&gt;, `0.03-2051660` &lt;dbl&gt;, `lci-2051660` &lt;dbl&gt;,
## #   `hci-2051660` &lt;dbl&gt;, `0.03-2055690` &lt;dbl&gt;, `lci-2055690` &lt;dbl&gt;,
## #   `hci-2055690` &lt;dbl&gt;, `0.03-2057650` &lt;dbl&gt;, `lci-2057650` &lt;dbl&gt;,
## #   `hci-2057650` &lt;dbl&gt;, `0.03-2059653` &lt;dbl&gt;, `lci-2059653` &lt;dbl&gt;,
## #   `hci-2059653` &lt;dbl&gt;, `0.03-2061650` &lt;dbl&gt;, `lci-2061650` &lt;dbl&gt;,
## #   `hci-2061650` &lt;dbl&gt;, `0.03-2063650` &lt;dbl&gt;, `lci-2063650` &lt;dbl&gt;,
## #   `hci-2063650` &lt;dbl&gt;, `0.03-2065651` &lt;dbl&gt;, `lci-2065651` &lt;dbl&gt;,
## #   `hci-2065651` &lt;dbl&gt;, `0.03-2067650` &lt;dbl&gt;, `lci-2067650` &lt;dbl&gt;,
## #   `hci-2067650` &lt;dbl&gt;, `0.03-2071650` &lt;dbl&gt;, `lci-2071650` &lt;dbl&gt;,
## #   `hci-2071650` &lt;dbl&gt;, `0.03-2073650` &lt;dbl&gt;, `lci-2073650` &lt;dbl&gt;,
## #   `hci-2073650` &lt;dbl&gt;, `0.03-2075650` &lt;dbl&gt;, `lci-2075650` &lt;dbl&gt;,
## #   `hci-2075650` &lt;dbl&gt;, `0.03-2077653` &lt;dbl&gt;, `lci-2077653` &lt;dbl&gt;,
## #   `hci-2077653` &lt;dbl&gt;, `0.03-2081660` &lt;dbl&gt;, `lci-2081660` &lt;dbl&gt;,
## #   `hci-2081660` &lt;dbl&gt;, `0.03-2083650` &lt;dbl&gt;, `lci-2083650` &lt;dbl&gt;, …
</code></pre></div></div>

<p>If you look at the contents of <code class="language-plaintext highlighter-rouge">rarefy</code>, you’ll see that it looks pretty ugly. The first column, <code class="language-plaintext highlighter-rouge">numsampled</code> has the number of sequences that have been sampled and it goes from 1 to 430213 in 100 sequence steps. The columns are displayed in sets of threes. For example, <code class="language-plaintext highlighter-rouge">0.03-2003650 lci-2003650 hci-2003650</code>. The first column in the triplet is the average number of OTUs observed for that sample (e.g. <code class="language-plaintext highlighter-rouge">2003650</code>) at the specified number of sequences sampled by the value in the <code class="language-plaintext highlighter-rouge">numsampled</code> column. The second and third columns in the triplet represent the lower (<code class="language-plaintext highlighter-rouge">lci</code>) and higher (<code class="language-plaintext highlighter-rouge">hci</code>) confidence interval. We don’t want to mess with the <code class="language-plaintext highlighter-rouge">lci</code> and <code class="language-plaintext highlighter-rouge">hci</code> columns. There’s 980 of these columns that are cluttering the data frame and will be in the way in a few moments. We can’t manually remove these columns using the <code class="language-plaintext highlighter-rouge">-</code> operator like we’ve seen before with the <code class="language-plaintext highlighter-rouge">select</code> function from the <code class="language-plaintext highlighter-rouge">dplyr</code> package. Can you remember another function from the <code class="language-plaintext highlighter-rouge">dplyr</code> package that we can use with <code class="language-plaintext highlighter-rouge">select</code>? Some options we might consider would be <code class="language-plaintext highlighter-rouge">contains</code> and <code class="language-plaintext highlighter-rouge">starts_with</code>. We can do</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rarefy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.rarefaction"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"lci-"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"hci-"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>or</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rarefy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.rarefaction"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"lci-"</span><span class="p">),</span><span class="w"> </span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"hci-"</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>Both of these work, it’s a matter of how explicit you want to be with the steps in your analysis. Note that we used <code class="language-plaintext highlighter-rouge">-contains(...)</code>, which removes those columns that contain the offending columns. If you look at <code class="language-plaintext highlighter-rouge">rarefy</code>, you’ll see that we now have all of the columns that start with <code class="language-plaintext highlighter-rouge">0.03</code>, which is what we want.</p>

<hr />

<h3 id="activity-3">Activity 3</h3>
<p>Rewrite the previous code chunk to get the columns we want without using negative signs.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">
  <p>Note that if we do what seems obvious, then we will lose our “numsampled” column, which we need to know how many sequences have been sampled from each sample</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.rarefaction"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="n">starts_with</span><span class="p">(</span><span class="s2">"0.03"</span><span class="p">))</span><span class="w">
</span></code></pre></div>  </div>

  <p>We need to remember that “numsampled” column in our <code class="language-plaintext highlighter-rouge">select</code> function call</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.rarefaction"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="s2">"numsampled"</span><span class="p">,</span><span class="w"> </span><span class="n">starts_with</span><span class="p">(</span><span class="s2">"0.03"</span><span class="p">))</span><span class="w">
</span></code></pre></div>  </div>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 4,790 x 491
##    numsampled `0.03-2003650` `0.03-2005650` `0.03-2007660` `0.03-2009650`
##         &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;
##  1          1            1              1              1              1  
##  2        100           43.9           43.2           40.8           47.3
##  3        200           59.7           61.2           59.2           68.7
##  4        300           70.3           73.6           71.8           82.9
##  5        400           78.6           83.0           82.2           94.2
##  6        500           85.4           91.0           90.4          104. 
##  7        600           92.2           98.4           97.6          113. 
##  8        700           97.6          105.           104.           120. 
##  9        800          102.           111.           110.           127. 
## 10        900          107.           117.           116.           134. 
## # … with 4,780 more rows, and 486 more variables: `0.03-2013660` &lt;dbl&gt;,
## #   `0.03-2015650` &lt;dbl&gt;, `0.03-2017660` &lt;dbl&gt;, `0.03-2019651` &lt;dbl&gt;,
## #   `0.03-2023680` &lt;dbl&gt;, `0.03-2025653` &lt;dbl&gt;, `0.03-2027653` &lt;dbl&gt;,
## #   `0.03-2029650` &lt;dbl&gt;, `0.03-2031650` &lt;dbl&gt;, `0.03-2033650` &lt;dbl&gt;,
## #   `0.03-2035650` &lt;dbl&gt;, `0.03-2037653` &lt;dbl&gt;, `0.03-2039650` &lt;dbl&gt;,
## #   `0.03-2041650` &lt;dbl&gt;, `0.03-2043650` &lt;dbl&gt;, `0.03-2045653` &lt;dbl&gt;,
## #   `0.03-2049653` &lt;dbl&gt;, `0.03-2051660` &lt;dbl&gt;, `0.03-2055690` &lt;dbl&gt;,
## #   `0.03-2057650` &lt;dbl&gt;, `0.03-2059653` &lt;dbl&gt;, `0.03-2061650` &lt;dbl&gt;,
## #   `0.03-2063650` &lt;dbl&gt;, `0.03-2065651` &lt;dbl&gt;, `0.03-2067650` &lt;dbl&gt;,
## #   `0.03-2071650` &lt;dbl&gt;, `0.03-2073650` &lt;dbl&gt;, `0.03-2075650` &lt;dbl&gt;,
## #   `0.03-2077653` &lt;dbl&gt;, `0.03-2081660` &lt;dbl&gt;, `0.03-2083650` &lt;dbl&gt;,
## #   `0.03-2085653` &lt;dbl&gt;, `0.03-2087650` &lt;dbl&gt;, `0.03-2093650` &lt;dbl&gt;,
## #   `0.03-2097653` &lt;dbl&gt;, `0.03-2103650` &lt;dbl&gt;, `0.03-2105652` &lt;dbl&gt;,
## #   `0.03-2107650` &lt;dbl&gt;, `0.03-2109653` &lt;dbl&gt;, `0.03-2113670` &lt;dbl&gt;,
## #   `0.03-2115650` &lt;dbl&gt;, `0.03-2117651` &lt;dbl&gt;, `0.03-2119650` &lt;dbl&gt;,
## #   `0.03-2123652` &lt;dbl&gt;, `0.03-2125650` &lt;dbl&gt;, `0.03-2127650` &lt;dbl&gt;,
## #   `0.03-2129660` &lt;dbl&gt;, `0.03-2131650` &lt;dbl&gt;, `0.03-2133650` &lt;dbl&gt;,
## #   `0.03-2137650` &lt;dbl&gt;, `0.03-2139650` &lt;dbl&gt;, `0.03-2143653` &lt;dbl&gt;,
## #   `0.03-2145660` &lt;dbl&gt;, `0.03-2147680` &lt;dbl&gt;, `0.03-2149650` &lt;dbl&gt;,
## #   `0.03-2151650` &lt;dbl&gt;, `0.03-2153660` &lt;dbl&gt;, `0.03-2155650` &lt;dbl&gt;,
## #   `0.03-2157660` &lt;dbl&gt;, `0.03-2159650` &lt;dbl&gt;, `0.03-2161653` &lt;dbl&gt;,
## #   `0.03-2163653` &lt;dbl&gt;, `0.03-2165652` &lt;dbl&gt;, `0.03-2167670` &lt;dbl&gt;,
## #   `0.03-2169653` &lt;dbl&gt;, `0.03-2171690` &lt;dbl&gt;, `0.03-2173650` &lt;dbl&gt;,
## #   `0.03-2177653` &lt;dbl&gt;, `0.03-2179650` &lt;dbl&gt;, `0.03-2181650` &lt;dbl&gt;,
## #   `0.03-2183650` &lt;dbl&gt;, `0.03-2185670` &lt;dbl&gt;, `0.03-2187680` &lt;dbl&gt;,
## #   `0.03-2189650` &lt;dbl&gt;, `0.03-2193650` &lt;dbl&gt;, `0.03-2195651` &lt;dbl&gt;,
## #   `0.03-2197670` &lt;dbl&gt;, `0.03-2199650` &lt;dbl&gt;, `0.03-2201650` &lt;dbl&gt;,
## #   `0.03-2203653` &lt;dbl&gt;, `0.03-2205670` &lt;dbl&gt;, `0.03-2207653` &lt;dbl&gt;,
## #   `0.03-2215650` &lt;dbl&gt;, `0.03-2219650` &lt;dbl&gt;, `0.03-2221650` &lt;dbl&gt;,
## #   `0.03-2223650` &lt;dbl&gt;, `0.03-2225650` &lt;dbl&gt;, `0.03-2227660` &lt;dbl&gt;,
## #   `0.03-2229653` &lt;dbl&gt;, `0.03-2231653` &lt;dbl&gt;, `0.03-2239650` &lt;dbl&gt;,
## #   `0.03-2241650` &lt;dbl&gt;, `0.03-2243651` &lt;dbl&gt;, `0.03-2253660` &lt;dbl&gt;,
## #   `0.03-2255653` &lt;dbl&gt;, `0.03-2257660` &lt;dbl&gt;, `0.03-2261650` &lt;dbl&gt;,
## #   `0.03-2265651` &lt;dbl&gt;, `0.03-2267653` &lt;dbl&gt;, `0.03-2271650` &lt;dbl&gt;, …
</code></pre></div>  </div>
</div>

<hr />

<h2 id="tidying-data">Tidying data</h2>
<p>We’ve made it all this way using various tools from the “tidyverse” without ever describing what the tidyverse is! “Tidy data” refers to the structure of a data frame where similar measurements are in the same column. For example, consider if we had the temperatures of various cities over time. We might be inclined to make a column for the date and then separate columns for each city. Then each row would contain the temperature for that date and city. This produces a wide-formatted data frame. This ends up being hard to work with. If you think about how we’ve been using <code class="language-plaintext highlighter-rouge">dplyr</code> and <code class="language-plaintext highlighter-rouge">ggplot</code> functions we want to apply their functions to columns. If we wanted to plot the temperature (or number of OTUs) by city, we would like to have a city column and a temperature column. Not a bunch of temperature columns for different cities. If you think about our <code class="language-plaintext highlighter-rouge">metadata</code> data frame it is tidy. Each column is distinct and measures a different thing about each person. Depending on the context, our <code class="language-plaintext highlighter-rouge">alpha</code> data frame could be considered to be non-tidy. We have numerous parameters (e.g. <code class="language-plaintext highlighter-rouge">shannon</code>, <code class="language-plaintext highlighter-rouge">invsimpson</code>, <code class="language-plaintext highlighter-rouge">sobs</code>, <code class="language-plaintext highlighter-rouge">coverage</code>) for each subject. If we wanted to compare those parameters to each other for each person, then we’d want them to be in the same column. Usually we wouldn’t want to compare <code class="language-plaintext highlighter-rouge">shannon</code> to <code class="language-plaintext highlighter-rouge">invsimpson</code> data so it isn’t a big deal. But we would want to compare Chicago to Nashville temperatures, so they should be in the same column. Similarly, we want to compare the rarefaction data for samples <code class="language-plaintext highlighter-rouge">2003650</code> and <code class="language-plaintext highlighter-rouge">2005650</code>. Within the tidyverse there is a <code class="language-plaintext highlighter-rouge">tidyr</code> package that has functions we will now use to make our <code class="language-plaintext highlighter-rouge">rarefy</code> data frame tidy.</p>

<p>Let’s start with a simpler example than <code class="language-plaintext highlighter-rouge">rarefy</code></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">temps</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tibble</span><span class="p">(</span><span class="n">day</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">3</span><span class="p">),</span><span class="w"> </span><span class="n">chicago</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">75</span><span class="p">,</span><span class="w"> </span><span class="m">77</span><span class="p">,</span><span class="w"> </span><span class="m">74</span><span class="p">),</span><span class="w"> </span><span class="n">detroit</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">69</span><span class="p">,</span><span class="w"> </span><span class="m">71</span><span class="p">,</span><span class="w"> </span><span class="m">70</span><span class="p">),</span><span class="w"> </span><span class="n">nashville</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">79</span><span class="p">,</span><span class="m">80</span><span class="p">,</span><span class="m">78</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>We can make <code class="language-plaintext highlighter-rouge">temps</code> a tidy data frame by using the <code class="language-plaintext highlighter-rouge">pivot_longer</code> function from <code class="language-plaintext highlighter-rouge">tidyr</code>. To use this function, we need to tell <code class="language-plaintext highlighter-rouge">pivot_longer</code> which columns (<code class="language-plaintext highlighter-rouge">cols</code>) we want to gather together and the name for the new column containing the city name (i.e. <code class="language-plaintext highlighter-rouge">names_to</code>) and the name for the new column containing the temperatures (i.e. <code class="language-plaintext highlighter-rouge">values_to</code>)</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pivot_longer</span><span class="p">(</span><span class="n">temps</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="n">chicago</span><span class="p">,</span><span class="w"> </span><span class="n">detroit</span><span class="p">,</span><span class="w"> </span><span class="n">nashville</span><span class="p">),</span><span class="w"> </span><span class="n">names_to</span><span class="o">=</span><span class="s1">'city'</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="o">=</span><span class="s1">'temperatures'</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 9 x 3
##     day city      temperatures
##   &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt;
## 1     1 chicago             75
## 2     1 detroit             69
## 3     1 nashville           79
## 4     2 chicago             77
## 5     2 detroit             71
## 6     2 nashville           80
## 7     3 chicago             74
## 8     3 detroit             70
## 9     3 nashville           78
</code></pre></div></div>

<p>Note that if we had a bunch of cities, it would be a pain to write them all out. We could use the helper functions that we used with <code class="language-plaintext highlighter-rouge">select</code>. Alternatively, if there’s only one other column (e.g. “day” or “numsampled”), you could use the <code class="language-plaintext highlighter-rouge">-</code> to tell <code class="language-plaintext highlighter-rouge">pivot_longer</code> to ignore that columns</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pivot_longer</span><span class="p">(</span><span class="n">temps</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="o">-</span><span class="n">day</span><span class="p">),</span><span class="w"> </span><span class="n">names_to</span><span class="o">=</span><span class="s1">'city'</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="o">=</span><span class="s1">'temperatures'</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 9 x 3
##     day city      temperatures
##   &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt;
## 1     1 chicago             75
## 2     1 detroit             69
## 3     1 nashville           79
## 4     2 chicago             77
## 5     2 detroit             71
## 6     2 nashville           80
## 7     3 chicago             74
## 8     3 detroit             70
## 9     3 nashville           78
</code></pre></div></div>

<p>Let’s apply this to our rarefaction data</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rarefy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.rarefaction"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"lci-"</span><span class="p">),</span><span class="w"> </span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"hci-"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="o">-</span><span class="n">numsampled</span><span class="p">),</span><span class="w"> </span><span class="n">names_to</span><span class="o">=</span><span class="s1">'sample'</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="o">=</span><span class="s1">'sobs'</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Our <code class="language-plaintext highlighter-rouge">rarefy</code> data frame now has 2347100 rows and three columns. It has gone from being really wide to being skinny and really long. As we’ll see in the next section, it is now much easier to do a join between <code class="language-plaintext highlighter-rouge">rarefy</code> and <code class="language-plaintext highlighter-rouge">metadata</code> than it would have been with the samples across the columns.</p>

<hr />

<h3 id="activity-4">Activity 4</h3>
<p>Use the <code class="language-plaintext highlighter-rouge">pivot_longer</code> function with our <code class="language-plaintext highlighter-rouge">alpha</code> data frame to gather together the <code class="language-plaintext highlighter-rouge">sobs</code>, <code class="language-plaintext highlighter-rouge">shannon</code>, <code class="language-plaintext highlighter-rouge">invsimpson</code>, and <code class="language-plaintext highlighter-rouge">coverage</code> columns. The key column should be called “metric” and the value column should be called “value”.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">alpha</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.groups.ave-std.summary"</span><span class="p">,</span><span class="w">
		</span><span class="n">col_types</span><span class="o">=</span><span class="n">cols</span><span class="p">(</span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">col_character</span><span class="p">()))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">method</span><span class="o">==</span><span class="s1">'ave'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">shannon</span><span class="p">,</span><span class="w"> </span><span class="n">invsimpson</span><span class="p">,</span><span class="w"> </span><span class="n">coverage</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="o">-</span><span class="n">group</span><span class="p">),</span><span class="w"> </span><span class="n">names_to</span><span class="o">=</span><span class="s2">"metric"</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="o">=</span><span class="s2">"value"</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>
</div>

<hr />

<h2 id="cleaning-up-our-sample-names">Cleaning up our sample names</h2>
<p>What we want to be able to do is connect our sample identifiers in the column names of <code class="language-plaintext highlighter-rouge">rarefy</code> with the sample identifiers in <code class="language-plaintext highlighter-rouge">metadata</code>. The names in the “sample” column aren’t quite where they need to be. We need to remove the <code class="language-plaintext highlighter-rouge">0.03-</code> from each identifier. R has several options for manipulating strings. Basically, we want to use one of those functions that will do a find all/replace all operation for us. There are two options: <code class="language-plaintext highlighter-rouge">gsub</code> and <code class="language-plaintext highlighter-rouge">str_replace_all</code>. The former is part of the base R package while the latter is part of <code class="language-plaintext highlighter-rouge">tidyr</code>. They do the same thing, but <code class="language-plaintext highlighter-rouge">str_replace_all</code> is a bit preferable since it’s more readable. Let’s try it out…</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">str_replace_all</span><span class="p">(</span><span class="n">string</span><span class="o">=</span><span class="s2">"0.03-2003650"</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"0.03-"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [1] "2003650"
</code></pre></div></div>

<p>That’s exactly what we want, but distributed across the entire column. In later lessons we’ll see how we can use more sophisticated <code class="language-plaintext highlighter-rouge">pattern</code> and <code class="language-plaintext highlighter-rouge">replacement</code> values to do more powerful searches. Let’s go ahead and apply <code class="language-plaintext highlighter-rouge">str_replace_all</code> to our <code class="language-plaintext highlighter-rouge">rarefy</code> data frame so we can get to our line plots.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rarefy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.rarefaction"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"lci-"</span><span class="p">),</span><span class="w"> </span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"hci-"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="o">-</span><span class="n">numsampled</span><span class="p">),</span><span class="w"> </span><span class="n">names_to</span><span class="o">=</span><span class="s1">'sample'</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="o">=</span><span class="s1">'sobs'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">sample</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"0.03-"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w">
</span></code></pre></div></div>

<p>One thing that you may remember from looking at rarefy when it was a wide data frame was that there were a lot of <code class="language-plaintext highlighter-rouge">NA</code> values in the data frame. This is because one sample may have had 10000 reads, but another sample only had 9000 reads. For the second sample, the number of OTUs between 9000 and 1000 reads would be an <code class="language-plaintext highlighter-rouge">NA</code> since the data were missing. We can remove these <code class="language-plaintext highlighter-rouge">NA</code> values by using the <code class="language-plaintext highlighter-rouge">drop_na</code> function from the <code class="language-plaintext highlighter-rouge">tidyr</code> package</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">rarefy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.rarefaction"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"lci-"</span><span class="p">),</span><span class="w"> </span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"hci-"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="o">-</span><span class="n">numsampled</span><span class="p">),</span><span class="w"> </span><span class="n">names_to</span><span class="o">=</span><span class="s1">'sample'</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="o">=</span><span class="s1">'sobs'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">sample</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"0.03-"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">drop_na</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p>Now the rarefy data frame “only” has 140,797 rows. We are now ready for our <code class="language-plaintext highlighter-rouge">inner_join</code> to connect the <code class="language-plaintext highlighter-rouge">rarefy</code> and <code class="language-plaintext highlighter-rouge">metadata</code> data frames</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">source</span><span class="p">(</span><span class="s1">'code/baxter.R'</span><span class="p">)</span><span class="w">
</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_metadata</span><span class="p">()</span><span class="w">
</span><span class="n">metadata_rarefy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inner_join</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">rarefy</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>If we were interested in plotting the rarefaction curves and coloring them by diagnosis of the person the sample came from, we could use <code class="language-plaintext highlighter-rouge">select</code> to get the “sample” and “dianosis” columns from <code class="language-plaintext highlighter-rouge">metadata</code> before joining. This would make the data frame much smaller. It isn’t that big, so we’ll stick with what we’ve got.</p>

<hr />

<h3 id="activity-5">Activity 5</h3>
<p>Create a new data frame called <code class="language-plaintext highlighter-rouge">roman_metadata</code> where the numbers in the “stage” column of metadata is represented as a roman numeral. This will require multiple lines of code.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">
  <p>There are probably easier ways of doing this (e.g. <code class="language-plaintext highlighter-rouge">case_when</code>), but this also works</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">roman_metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">metadata</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
			</span><span class="n">mutate</span><span class="p">(</span><span class="n">stage</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">stage</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"1"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"I"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
			</span><span class="n">mutate</span><span class="p">(</span><span class="n">stage</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">stage</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"2"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"II"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
			</span><span class="n">mutate</span><span class="p">(</span><span class="n">stage</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">stage</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"3"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"III"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
			</span><span class="n">mutate</span><span class="p">(</span><span class="n">stage</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">stage</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"4"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">"IV"</span><span class="p">))</span><span class="w">
</span><span class="n">roman_metadata</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">count</span><span class="p">(</span><span class="n">stage</span><span class="p">)</span><span class="w">
</span></code></pre></div>  </div>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## # A tibble: 5 x 2
##   stage     n
##   &lt;chr&gt; &lt;int&gt;
## 1 0       370
## 2 I        39
## 3 II       35
## 4 III      36
## 5 IV       10
</code></pre></div>  </div>
</div>

<hr />

<h2 id="plotting-rarefaction-curves">Plotting rarefaction curves</h2>
<p>At this point you’ve probably seen enough of the ggplot syntax to anticipate what we’re going to do. Insted of <code class="language-plaintext highlighter-rouge">geom_point</code> or <code class="language-plaintext highlighter-rouge">geom_jitter</code>, we’re going to use <code class="language-plaintext highlighter-rouge">geom_line</code></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">geom_line</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-29-1.png" title="plot of chunk unnamed-chunk-29" alt="plot of chunk unnamed-chunk-29" width="504" /></p>

<p>Whoa. That my friends is what we call <a href="https://twitter.com/search?q=rstats%20accidentalart&amp;src=typd">#accidentalaRt</a>. It appears that the points were all connected by a single line. We want separate lines for each sample. Looking at the aesthetics that we can use with <code class="language-plaintext highlighter-rouge">geom_line</code>, we see that there is a <code class="language-plaintext highlighter-rouge">group</code> option. We want to use that to group our samples by <code class="language-plaintext highlighter-rouge">sample</code>.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">geom_line</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-30-1.png" title="plot of chunk unnamed-chunk-30" alt="plot of chunk unnamed-chunk-30" width="504" /></p>

<p>That’s more like it! Let’s map the <code class="language-plaintext highlighter-rouge">diagnosis</code> to the <code class="language-plaintext highlighter-rouge">color</code> aesthetic so our lines are colored by the subjects’ diagnosis group.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">geom_line</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-31-1.png" title="plot of chunk unnamed-chunk-31" alt="plot of chunk unnamed-chunk-31" width="504" /></p>

<p>To keep our coloring scheme consistent, let’s add our <code class="language-plaintext highlighter-rouge">scale_color_manual</code> function. While we’re at it, let’s add our titling and theme.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
		</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
		</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
		</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
		</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
		</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-32-1.png" title="plot of chunk unnamed-chunk-32" alt="plot of chunk unnamed-chunk-32" width="504" /></p>

<p>One thing we might notice is that most of the action is occurring inside of 20,000 sequences sampled. We’d like to zoom in on the x and y-axes. Recall that we can do this with the <code class="language-plaintext highlighter-rouge">coord_cartesian</code> function.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
		</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
		</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
		</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
		</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
		</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-33-1.png" title="plot of chunk unnamed-chunk-33" alt="plot of chunk unnamed-chunk-33" width="504" /></p>

<p>This plot is a bit much. There are way too many lines. To illustrate some other features of <code class="language-plaintext highlighter-rouge">geom_line</code>, let’s reduce the number of samples. We can do this with the <code class="language-plaintext highlighter-rouge">sample_n</code> or <code class="language-plaintext highlighter-rouge">sample_frac</code> functions from the <code class="language-plaintext highlighter-rouge">dplyr</code> package.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">set.seed</span><span class="p">(</span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="c1">#this makes sure that we all get the same result!</span><span class="w">
</span><span class="n">metadata_rarefy_sample</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">metadata</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">sample_n</span><span class="p">(</span><span class="m">10</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">inner_join</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="n">rarefy</span><span class="p">)</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy_sample</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-34-1.png" title="plot of chunk unnamed-chunk-34" alt="plot of chunk unnamed-chunk-34" width="504" /></p>

<p>Here we have solid lines. What if we want to have some hashing to the lines or want to change their width? Let’s start with the hashing, which is controlled by the <code class="language-plaintext highlighter-rouge">linetype</code> aesthetic</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy_sample</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_line</span><span class="p">(</span><span class="n">linetype</span><span class="o">=</span><span class="m">5</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-35-1.png" title="plot of chunk unnamed-chunk-35" alt="plot of chunk unnamed-chunk-35" width="504" /></p>

<p>There are six different <code class="language-plaintext highlighter-rouge">linetype</code>s that you can set with a number from 1 to 6.</p>

<hr />

<h3 id="activity-6">Activity 6</h3>
<p>Map the diagnosis value for each subject on to the line type. Make sure that you only have one legend.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy_sample</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">,</span><span class="w"> </span><span class="n">linetype</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_linetype_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="m">6</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/07_line_plots//unnamed-chunk-36-1.png" title="plot of chunk unnamed-chunk-36" alt="plot of chunk unnamed-chunk-36" width="504" /></p>
</div>

<hr />

<h3 id="activity-7">Activity 7</h3>
<p>Map the diagnosis value for each subject onto color and their sex to the line type.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy_sample</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">,</span><span class="w"> </span><span class="n">linetype</span><span class="o">=</span><span class="n">sex</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_linetype_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="m">6</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"female"</span><span class="p">,</span><span class="w"> </span><span class="s2">"male"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Female"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Male"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/07_line_plots//unnamed-chunk-37-1.png" title="plot of chunk unnamed-chunk-37" alt="plot of chunk unnamed-chunk-37" width="504" /></p>
</div>

<hr />

<h3 id="activity-8">Activity 8</h3>
<p>Map the diagnosis value for each subject onto color and their sex to shape of the plotting symbol.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy_sample</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">,</span><span class="w"> </span><span class="n">shape</span><span class="o">=</span><span class="n">sex</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_point</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_shape_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">19</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"female"</span><span class="p">,</span><span class="w"> </span><span class="s2">"male"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Female"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Male"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/07_line_plots//unnamed-chunk-38-1.png" title="plot of chunk unnamed-chunk-38" alt="plot of chunk unnamed-chunk-38" width="504" /></p>

  <p>You’ll notice some clumping in the points along the lines. This occurs because if a sample got to 9331 sequences, then mothur outputted the data for all of the samples at 9331 sequences. We could change the output to make sure that the data outputted every 1000 or 5000 or whatever sequences by making a second data frame to use with the <code class="language-plaintext highlighter-rouge">geom_line</code> function.</p>

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">metadata_rarefy_sample_dots</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">metadata_rarefy_sample</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">filter</span><span class="p">(</span><span class="n">numsampled</span><span class="w"> </span><span class="o">%%</span><span class="w"> </span><span class="m">1000</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy_sample</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_point</span><span class="p">(</span><span class="n">data</span><span class="o">=</span><span class="n">metadata_rarefy_sample_dots</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">,</span><span class="w"> </span><span class="n">shape</span><span class="o">=</span><span class="n">sex</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_shape_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">19</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"female"</span><span class="p">,</span><span class="w"> </span><span class="s2">"male"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Female"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Male"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/07_line_plots//unnamed-chunk-39-1.png" title="plot of chunk unnamed-chunk-39" alt="plot of chunk unnamed-chunk-39" width="504" /></p>

  <p>The <code class="language-plaintext highlighter-rouge">%%</code> function is the modulus operator, which returns the remainder of dividing one number by another. If you do <code class="language-plaintext highlighter-rouge">233 %% 100</code> the value would be <code class="language-plaintext highlighter-rouge">33</code>. If you did <code class="language-plaintext highlighter-rouge">2000 %% 1000</code>, the remainder would be <code class="language-plaintext highlighter-rouge">0</code>.</p>
</div>

<hr />

<h2 id="using-lines-to-annotate-a-plot">Using lines to annotate a plot</h2>

<p>In the original study, we rarefied all of our data to 10,530 sequences per sample. We would like to have a vertical line that crosses the x-axis at 10,530 to indicate the number of OTUs that were observed at that threshold. Let’s return to our simple line plot. We will add a vertical line using the <code class="language-plaintext highlighter-rouge">geom_vline</code> function.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy_sample</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_vline</span><span class="p">(</span><span class="n">xintercept</span><span class="o">=</span><span class="m">10530</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-40-1.png" title="plot of chunk unnamed-chunk-40" alt="plot of chunk unnamed-chunk-40" width="504" /></p>

<p>As with <code class="language-plaintext highlighter-rouge">geom_line</code>, we can change the line type, color, and width. Let’s make the line a bit thicker and have it be gray. To put the vertical line behind the curves, we will call <code class="language-plaintext highlighter-rouge">geom_vline</code> before <code class="language-plaintext highlighter-rouge">geom_line</code></p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy_sample</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_vline</span><span class="p">(</span><span class="n">xintercept</span><span class="o">=</span><span class="m">10530</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"gray"</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-41-1.png" title="plot of chunk unnamed-chunk-41" alt="plot of chunk unnamed-chunk-41" width="504" /></p>

<p>You might have seen this coming, but if you want a horizontal line, you would use <code class="language-plaintext highlighter-rouge">geom_hline</code> with the <code class="language-plaintext highlighter-rouge">yintercept</code> attribute.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy_sample</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_hline</span><span class="p">(</span><span class="n">yintercept</span><span class="o">=</span><span class="m">200</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"gray"</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-42-1.png" title="plot of chunk unnamed-chunk-42" alt="plot of chunk unnamed-chunk-42" width="504" /></p>

<p>A third type of line that doesn’t exactly fit with rarefaction data is <code class="language-plaintext highlighter-rouge">geom_abline</code> or a straight line with a defined y-intercept and slope</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy_sample</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_abline</span><span class="p">(</span><span class="n">intercept</span><span class="o">=</span><span class="m">150</span><span class="p">,</span><span class="w"> </span><span class="n">slope</span><span class="o">=</span><span class="m">0.005</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"gray"</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
			</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
			</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
			</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
			</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
			</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
		</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div></div>

<p><img src="assets/images/07_line_plots//unnamed-chunk-43-1.png" title="plot of chunk unnamed-chunk-43" alt="plot of chunk unnamed-chunk-43" width="504" /></p>

<hr />

<h3 id="activity-9">Activity 9</h3>
<p>Create a scatter plot with the subjects’ FIT result on the x-axis and the Shannon diversity index on the y-axis. Color the points by diagnosis group and draw a vertical line to cross the x-axis at 100.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">source</span><span class="p">(</span><span class="s2">"code/baxter.R"</span><span class="p">)</span><span class="w">
</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_metadata</span><span class="p">()</span><span class="w">

</span><span class="n">alpha</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.groups.ave-std.summary"</span><span class="p">,</span><span class="w">
		</span><span class="n">col_types</span><span class="o">=</span><span class="n">cols</span><span class="p">(</span><span class="n">group</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">col_character</span><span class="p">()))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">filter</span><span class="p">(</span><span class="n">method</span><span class="o">==</span><span class="s1">'ave'</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="n">group</span><span class="p">,</span><span class="w"> </span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">shannon</span><span class="p">,</span><span class="w"> </span><span class="n">invsimpson</span><span class="p">,</span><span class="w"> </span><span class="n">coverage</span><span class="p">)</span><span class="w">

</span><span class="n">meta_alpha</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inner_join</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">alpha</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s1">'sample'</span><span class="o">=</span><span class="s1">'group'</span><span class="p">))</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">meta_alpha</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">fit_result</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">shannon</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">geom_vline</span><span class="p">(</span><span class="n">xintercept</span><span class="o">=</span><span class="m">100</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"gray"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">geom_point</span><span class="p">(</span><span class="n">size</span><span class="o">=</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
		</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
		</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
		</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"No apparent relationship between Shannon diversity index and FIT result"</span><span class="p">,</span><span class="w">
		</span><span class="n">subtitle</span><span class="o">=</span><span class="s2">"Vertical line indicates the clinical screening threshold of 100"</span><span class="p">,</span><span class="w">
		</span><span class="n">x</span><span class="o">=</span><span class="s2">"FIT Result"</span><span class="p">,</span><span class="w">
		</span><span class="n">y</span><span class="o">=</span><span class="s2">"Shannon Diversity Index"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span></code></pre></div>  </div>

  <p><img src="assets/images/07_line_plots//unnamed-chunk-44-1.png" title="plot of chunk unnamed-chunk-44" alt="plot of chunk unnamed-chunk-44" width="504" /></p>
</div>

<hr />

<h3 id="activity-10">Activity 10</h3>
<p>Create a file in <code class="language-plaintext highlighter-rouge">code/</code> that is called <code class="language-plaintext highlighter-rouge">plot_rarefaction_curves.R</code> that contains the code needed to generate the 490 rarefaction curves colored by diagnosis. Draw a vertical gray line behind the curves to indicate where the 10,530 sequence threshold was. Restart R and run <code class="language-plaintext highlighter-rouge">source("code/plot_rarefaction_curves.R")</code> to make sure it runs as intended.</p>

<p><input type="button" class="hideshow" /></p>
<div style="display:none;">

  <div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="w">
</span><span class="n">source</span><span class="p">(</span><span class="s2">"code/baxter.R"</span><span class="p">)</span><span class="w">
</span><span class="n">metadata</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">get_metadata</span><span class="p">()</span><span class="w">

</span><span class="n">rarefy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_tsv</span><span class="p">(</span><span class="n">file</span><span class="o">=</span><span class="s2">"raw_data/baxter.rarefaction"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"lci-"</span><span class="p">),</span><span class="w"> </span><span class="o">-</span><span class="n">contains</span><span class="p">(</span><span class="s2">"hci-"</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">pivot_longer</span><span class="p">(</span><span class="n">cols</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="o">-</span><span class="n">numsampled</span><span class="p">),</span><span class="w"> </span><span class="n">names_to</span><span class="o">=</span><span class="s2">"sample"</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="o">=</span><span class="s2">"sobs"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">mutate</span><span class="p">(</span><span class="n">sample</span><span class="o">=</span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="o">=</span><span class="s2">"0.03-"</span><span class="p">,</span><span class="w"> </span><span class="n">replacement</span><span class="o">=</span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
	</span><span class="n">drop_na</span><span class="p">()</span><span class="w">

</span><span class="n">metadata_rarefy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">inner_join</span><span class="p">(</span><span class="n">metadata</span><span class="p">,</span><span class="w"> </span><span class="n">rarefy</span><span class="p">)</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">metadata_rarefy</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="n">numsampled</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="o">=</span><span class="n">sobs</span><span class="p">,</span><span class="w"> </span><span class="n">group</span><span class="o">=</span><span class="n">sample</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">geom_vline</span><span class="p">(</span><span class="n">xintercept</span><span class="o">=</span><span class="m">10530</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="o">=</span><span class="s2">"gray"</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="o">=</span><span class="m">2</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">scale_color_manual</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="kc">NULL</span><span class="p">,</span><span class="w">
		</span><span class="n">values</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"black"</span><span class="p">,</span><span class="w"> </span><span class="s2">"blue"</span><span class="p">,</span><span class="w"> </span><span class="s2">"red"</span><span class="p">),</span><span class="w">
		</span><span class="n">breaks</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"cancer"</span><span class="p">),</span><span class="w">
		</span><span class="n">labels</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="s2">"Normal"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Adenoma"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Cancer"</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">coord_cartesian</span><span class="p">(</span><span class="n">xlim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">20000</span><span class="p">),</span><span class="w"> </span><span class="n">ylim</span><span class="o">=</span><span class="nf">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span><span class="m">500</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="o">=</span><span class="s2">"Rarefaction curves are pretty pointless at this scale"</span><span class="p">,</span><span class="w">
		</span><span class="n">subtitle</span><span class="o">=</span><span class="s2">"Vertical line indicates the number of sequences that samples were rarefied to"</span><span class="p">,</span><span class="w">
		</span><span class="n">x</span><span class="o">=</span><span class="s2">"Number of Sequences Sampled per Subject"</span><span class="p">,</span><span class="w">
		</span><span class="n">y</span><span class="o">=</span><span class="s2">"Number of OTUs per Subject"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
	</span><span class="n">theme_classic</span><span class="p">()</span><span class="w">
</span><span class="n">ggsave</span><span class="p">(</span><span class="s2">"figures/rarefaction.pdf"</span><span class="p">)</span><span class="w">

</span></code></pre></div>  </div>

  <p><img src="assets/images/07_line_plots//unnamed-chunk-47-1.png" title="plot of chunk unnamed-chunk-47" alt="plot of chunk unnamed-chunk-47" width="504" /></p>

  <div>



</div>
</div>
:ET